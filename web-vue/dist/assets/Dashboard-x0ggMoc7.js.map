{"version":3,"file":"Dashboard-x0ggMoc7.js","sources":["../../node_modules/@heroicons/vue/24/outline/esm/BoltIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/ChatBubbleLeftRightIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/ChevronDownIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/ChevronRightIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/ClockIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/CloudIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/ComputerDesktopIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/DocumentArrowDownIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/HashtagIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/HeartIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/PauseIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/PlayIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/ServerIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/TrashIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/WifiIcon.js","../../src/utils/formatters.ts","../../src/components/layout/DashboardFooter.vue","../../src/components/cards/SystemStatusCard.vue","../../src/components/cards/PerformanceMetricsCard.vue","../../src/components/cards/ConnectionStatusCard.vue","../../src/components/cards/QuickActionsCard.vue","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../src/components/charts/PerformanceChart.vue","../../src/components/charts/KeywordCloud.vue","../../src/components/data/SessionList.vue","../../src/components/data/MemoryAnalysis.vue","../../src/components/cards/FeatureCard.vue","../../src/components/cards/SystemHealthCard.vue","../../src/components/cards/AlertsManagementCard.vue","../../src/views/Dashboard.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"m3.75 13.5 10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 0 1-.825-.242m9.345-8.334a2.126 2.126 0 0 0-.476-.095 48.64 48.64 0 0 0-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0 0 11.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"m19.5 8.25-7.5 7.5-7.5-7.5\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M2.25 15a4.5 4.5 0 0 0 4.5 4.5H18a3.75 3.75 0 0 0 1.332-7.257 3 3 0 0 0-3.758-3.848 5.25 5.25 0 0 0-10.233 2.33A4.502 4.502 0 0 0 2.25 15Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m.75 12 3 3m0 0 3-3m-3 3v-6m-1.5-9H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5-3.9 19.5m-2.1-19.5-3.9 19.5\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M15.75 5.25v13.5m-7.5-13.5v13.5\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M21.75 17.25v-.228a4.5 4.5 0 0 0-.12-1.03l-2.268-9.64a3.375 3.375 0 0 0-3.285-2.602H7.923a3.375 3.375 0 0 0-3.285 2.602l-2.268 9.64a4.5 4.5 0 0 0-.12 1.03v.228m19.5 0a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3m19.5 0a3 3 0 0 0-3-3H5.25a3 3 0 0 0-3 3m16.5 0h.008v.008h-.008v-.008Zm-3 0h.008v.008h-.008v-.008Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M8.288 15.038a5.25 5.25 0 0 1 7.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 0 1 1.06 0Z\"\n    })\n  ]))\n}","import { format, formatDistanceToNow } from 'date-fns'\r\nimport { zhCN } from 'date-fns/locale'\r\n\r\n/**\r\n * 格式化时间长度（秒）为可读字符串\r\n */\r\nexport function formatDuration(seconds: number): string {\r\n  if (seconds < 1) {\r\n    return `${Math.round(seconds * 1000)}毫秒`\r\n  }\r\n  \r\n  if (seconds < 60) {\r\n    return `${Math.round(seconds)}秒`\r\n  }\r\n  \r\n  const minutes = Math.floor(seconds / 60)\r\n  const remainingSeconds = Math.round(seconds % 60)\r\n  \r\n  if (minutes < 60) {\r\n    return remainingSeconds > 0 \r\n      ? `${minutes}分${remainingSeconds}秒`\r\n      : `${minutes}分钟`\r\n  }\r\n  \r\n  const hours = Math.floor(minutes / 60)\r\n  const remainingMinutes = minutes % 60\r\n  \r\n  if (hours < 24) {\r\n    return remainingMinutes > 0 \r\n      ? `${hours}小时${remainingMinutes}分钟`\r\n      : `${hours}小时`\r\n  }\r\n  \r\n  const days = Math.floor(hours / 24)\r\n  const remainingHours = hours % 24\r\n  \r\n  return remainingHours > 0 \r\n    ? `${days}天${remainingHours}小时`\r\n    : `${days}天`\r\n}\r\n\r\n/**\r\n * 格式化字节大小\r\n */\r\nexport function formatBytes(bytes: number, decimals = 2): string {\r\n  if (bytes === 0) return '0 B'\r\n  \r\n  const k = 1024\r\n  const dm = decimals < 0 ? 0 : decimals\r\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']\r\n  \r\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n  \r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\r\n}\r\n\r\n/**\r\n * 格式化百分比\r\n */\r\nexport function formatPercentage(value: number, decimals = 1): string {\r\n  return `${(value * 100).toFixed(decimals)}%`\r\n}\r\n\r\n/**\r\n * 格式化数字，添加千分位分隔符\r\n */\r\nexport function formatNumber(num: number, decimals = 0): string {\r\n  return new Intl.NumberFormat('zh-CN', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals,\r\n  }).format(num)\r\n}\r\n\r\n/**\r\n * 格式化大数字为紧凑格式 (1000 -> 1K)\r\n */\r\nexport function formatCompactNumber(num: number): string {\r\n  return new Intl.NumberFormat('zh-CN', {\r\n    notation: 'compact',\r\n    compactDisplay: 'short',\r\n  }).format(num)\r\n}\r\n\r\n/**\r\n * 格式化日期时间\r\n */\r\nexport function formatDateTime(date: Date | string | number): string {\r\n  const dateObj = typeof date === 'string' || typeof date === 'number' \r\n    ? new Date(date) \r\n    : date\r\n    \r\n  return format(dateObj, 'yyyy-MM-dd HH:mm:ss', { locale: zhCN })\r\n}\r\n\r\n/**\r\n * 格式化相对时间 (2小时前)\r\n */\r\nexport function formatRelativeTime(date: Date | string | number): string {\r\n  const dateObj = typeof date === 'string' || typeof date === 'number' \r\n    ? new Date(date) \r\n    : date\r\n    \r\n  return formatDistanceToNow(dateObj, { \r\n    addSuffix: true, \r\n    locale: zhCN \r\n  })\r\n}\r\n\r\n/**\r\n * 格式化时间戳为简短格式\r\n */\r\nexport function formatShortTime(timestamp: number): string {\r\n  const date = new Date(timestamp)\r\n  const now = new Date()\r\n  \r\n  // 如果是今天，只显示时间\r\n  if (date.toDateString() === now.toDateString()) {\r\n    return format(date, 'HH:mm', { locale: zhCN })\r\n  }\r\n  \r\n  // 如果是今年，显示月日时间\r\n  if (date.getFullYear() === now.getFullYear()) {\r\n    return format(date, 'MM-dd HH:mm', { locale: zhCN })\r\n  }\r\n  \r\n  // 否则显示完整日期\r\n  return format(date, 'yy-MM-dd HH:mm', { locale: zhCN })\r\n}\r\n\r\n/**\r\n * 截断文本并添加省略号\r\n */\r\nexport function truncateText(text: string, maxLength: number): string {\r\n  if (text.length <= maxLength) return text\r\n  return text.substring(0, maxLength) + '...'\r\n}\r\n\r\n/**\r\n * 格式化JSON为可读格式\r\n */\r\nexport function formatJSON(obj: any): string {\r\n  try {\r\n    return JSON.stringify(obj, null, 2)\r\n  } catch (error) {\r\n    return String(obj)\r\n  }\r\n}\r\n\r\n/**\r\n * 高亮搜索关键词\r\n */\r\nexport function highlightSearchTerms(text: string, searchTerms: string[]): string {\r\n  if (!searchTerms.length) return text\r\n  \r\n  let highlighted = text\r\n  searchTerms.forEach(term => {\r\n    const regex = new RegExp(`(${term})`, 'gi')\r\n    highlighted = highlighted.replace(regex, '<mark class=\"bg-yellow-200 px-1 rounded\">$1</mark>')\r\n  })\r\n  \r\n  return highlighted\r\n}\r\n\r\n/**\r\n * 生成随机颜色（用于图表等）\r\n */\r\nexport function generateRandomColor(alpha = 1): string {\r\n  const hue = Math.floor(Math.random() * 360)\r\n  const saturation = Math.floor(Math.random() * 30) + 70 // 70-100%\r\n  const lightness = Math.floor(Math.random() * 20) + 45  // 45-65%\r\n  \r\n  return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`\r\n}\r\n\r\n/**\r\n * 生成预定义的颜色调色板\r\n */\r\nexport function getColorPalette(index: number): string {\r\n  const colors = [\r\n    '#3B82F6', // blue\r\n    '#10B981', // green\r\n    '#F59E0B', // yellow\r\n    '#EF4444', // red\r\n    '#8B5CF6', // purple\r\n    '#06B6D4', // cyan\r\n    '#F97316', // orange\r\n    '#84CC16', // lime\r\n    '#EC4899', // pink\r\n    '#6B7280', // gray\r\n  ]\r\n  \r\n  return colors[index % colors.length]\r\n}\r\n\r\n/**\r\n * 计算文本的哈希值（用于生成一致的颜色）\r\n */\r\nexport function hashStringToColor(str: string): string {\r\n  let hash = 0\r\n  for (let i = 0; i < str.length; i++) {\r\n    const char = str.charCodeAt(i)\r\n    hash = ((hash << 5) - hash) + char\r\n    hash = hash & hash // 32位整数\r\n  }\r\n  \r\n  const hue = Math.abs(hash) % 360\r\n  return `hsl(${hue}, 70%, 50%)`\r\n}\r\n\r\n/**\r\n * 深拷贝对象\r\n */\r\nexport function deepClone<T>(obj: T): T {\r\n  if (obj === null || typeof obj !== 'object') return obj\r\n  if (obj instanceof Date) return new Date(obj.getTime()) as any\r\n  if (obj instanceof Array) return obj.map(item => deepClone(item)) as any\r\n  if (typeof obj === 'object') {\r\n    const cloned: any = {}\r\n    Object.keys(obj).forEach(key => {\r\n      cloned[key] = deepClone((obj as any)[key])\r\n    })\r\n    return cloned\r\n  }\r\n  return obj\r\n}\r\n\r\n/**\r\n * 防抖函数\r\n */\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  delay: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeoutId: NodeJS.Timeout\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeoutId)\r\n    timeoutId = setTimeout(() => func(...args), delay)\r\n  }\r\n}\r\n\r\n/**\r\n * 节流函数\r\n */\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args)\r\n      inThrottle = true\r\n      setTimeout(() => inThrottle = false, limit)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 等待指定时间\r\n */\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms))\r\n}\r\n\r\n/**\r\n * 检查是否为有效的URL\r\n */\r\nexport function isValidUrl(string: string): boolean {\r\n  try {\r\n    new URL(string)\r\n    return true\r\n  } catch (_) {\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 将驼峰命名转换为短横线命名\r\n */\r\nexport function camelToKebab(str: string): string {\r\n  return str.replace(/[A-Z]/g, letter => `-${letter.toLowerCase()}`)\r\n}\r\n\r\n/**\r\n * 将短横线命名转换为驼峰命名\r\n */\r\nexport function kebabToCamel(str: string): string {\r\n  return str.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())\r\n}","<template>\r\n  <footer class=\"bg-white/80 backdrop-blur-sm border-t border-gray-200 mt-12\">\r\n    <div class=\"container mx-auto px-4 py-6\">\r\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <!-- 系统信息 -->\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"font-semibold text-gray-800\">系统信息</h4>\r\n          <div class=\"text-sm text-gray-600 space-y-1\">\r\n            <div>版本: {{ appVersion }}</div>\r\n            <div>构建: Vue {{ vueVersion }}</div>\r\n            <div>最后更新: {{ lastUpdateDisplay }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 连接状态 -->\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"font-semibold text-gray-800\">连接状态</h4>\r\n          <div class=\"text-sm text-gray-600 space-y-1\">\r\n            <div class=\"flex items-center space-x-2\">\r\n              <div :class=\"['w-2 h-2 rounded-full', wsStatusColor]\"></div>\r\n              <span>WebSocket: {{ wsStatusText }}</span>\r\n            </div>\r\n            <div class=\"flex items-center space-x-2\">\r\n              <div :class=\"['w-2 h-2 rounded-full', apiStatusColor]\"></div>\r\n              <span>API: {{ apiStatusText }}</span>\r\n            </div>\r\n            <div>数据源: {{ dataSource }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 性能统计 -->\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"font-semibold text-gray-800\">性能统计</h4>\r\n          <div class=\"text-sm text-gray-600 space-y-1\">\r\n            <div>总会话数: {{ totalSessions }}</div>\r\n            <div>平均响应: {{ averageResponseTime }}ms</div>\r\n            <div>成功率: {{ successRate }}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 底部版权和链接 -->\r\n      <div class=\"mt-6 pt-6 border-t border-gray-200\">\r\n        <div class=\"flex flex-col md:flex-row justify-between items-center\">\r\n          <div class=\"text-sm text-gray-600\">\r\n            © 2025 Estia AI. 基于Vue 3构建的智能记忆监控系统\r\n          </div>\r\n          \r\n          <div class=\"flex items-center space-x-4 mt-4 md:mt-0\">\r\n            <a\r\n              href=\"https://github.com/your-repo\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              class=\"text-sm text-gray-600 hover:text-primary-600 transition-colors\"\r\n            >\r\n              GitHub\r\n            </a>\r\n            <a\r\n              href=\"/docs\"\r\n              class=\"text-sm text-gray-600 hover:text-primary-600 transition-colors\"\r\n            >\r\n              文档\r\n            </a>\r\n            <button\r\n              @click=\"showDebugInfo = !showDebugInfo\"\r\n              class=\"text-sm text-gray-600 hover:text-primary-600 transition-colors\"\r\n            >\r\n              调试信息\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 调试信息面板 -->\r\n      <div v-if=\"showDebugInfo\" class=\"mt-4 p-4 bg-gray-50 rounded-lg\">\r\n        <h5 class=\"font-medium text-gray-800 mb-2\">调试信息</h5>\r\n        <div class=\"text-xs text-gray-600 font-mono space-y-1\">\r\n          <div>环境: {{ environment }}</div>\r\n          <div>构建时间: {{ buildTime }}</div>\r\n          <div>WebSocket ID: {{ connectionId || '未连接' }}</div>\r\n          <div>浏览器: {{ userAgent }}</div>\r\n          <div>屏幕分辨率: {{ screenResolution }}</div>\r\n          <div>内存使用: {{ memoryUsage }}</div>\r\n        </div>\r\n        \r\n        <!-- 系统健康检查 -->\r\n        <div class=\"mt-3\">\r\n          <button\r\n            @click=\"runHealthCheck\"\r\n            :disabled=\"isRunningHealthCheck\"\r\n            class=\"text-xs bg-primary-500 text-white px-3 py-1 rounded hover:bg-primary-600 disabled:opacity-50\"\r\n          >\r\n            {{ isRunningHealthCheck ? '检查中...' : '运行健康检查' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useAppStore } from '@/stores/app'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { useWebSocket } from '@/services/websocket'\r\nimport { formatRelativeTime } from '@/utils/formatters'\r\nimport { apiService } from '@/services/api'\r\n\r\nconst appStore = useAppStore()\r\nconst monitoringStore = useMonitoringStore()\r\nconst { isConnected, connectionId } = useWebSocket()\r\n\r\nconst showDebugInfo = ref(false)\r\nconst isRunningHealthCheck = ref(false)\r\n\r\n// 系统信息\r\nconst appVersion = computed(() => appStore.appVersion)\r\nconst vueVersion = ref('3.4.15')\r\nconst environment = computed(() => import.meta.env.MODE)\r\nconst buildTime = computed(() => import.meta.env.VITE_BUILD_TIME || '未知')\r\n\r\n// 连接状态\r\nconst wsStatusText = computed(() => isConnected() ? '已连接' : '断开')\r\nconst wsStatusColor = computed(() => isConnected() ? 'bg-green-500' : 'bg-red-500')\r\n\r\nconst apiStatusText = computed(() => monitoringStore.isConnected ? '正常' : '异常')\r\nconst apiStatusColor = computed(() => monitoringStore.isConnected ? 'bg-green-500' : 'bg-red-500')\r\n\r\nconst dataSource = computed(() => {\r\n  const sourceMap: Record<string, string> = {\r\n    'live': '实时数据',\r\n    'mock': '模拟数据',\r\n    'test': '测试数据'\r\n  }\r\n  return sourceMap[monitoringStore.dataSource] || '未知'\r\n})\r\n\r\n// 性能统计\r\nconst totalSessions = computed(() => monitoringStore.totalSessions)\r\nconst averageResponseTime = computed(() => monitoringStore.averageResponseTime)\r\nconst successRate = computed(() => monitoringStore.successRate)\r\n\r\n// 最后更新时间\r\nconst lastUpdateDisplay = computed(() => {\r\n  if (!appStore.lastUpdateTime) return '从未'\r\n  return formatRelativeTime(appStore.lastUpdateTime)\r\n})\r\n\r\n// 调试信息\r\nconst userAgent = computed(() => {\r\n  const ua = navigator.userAgent\r\n  if (ua.includes('Chrome')) return `Chrome ${ua.match(/Chrome\\/(\\d+)/)?.[1]}`\r\n  if (ua.includes('Firefox')) return `Firefox ${ua.match(/Firefox\\/(\\d+)/)?.[1]}`\r\n  if (ua.includes('Safari')) return `Safari ${ua.match(/Version\\/(\\d+)/)?.[1]}`\r\n  return 'Unknown'\r\n})\r\n\r\nconst screenResolution = computed(() => `${screen.width}x${screen.height}`)\r\n\r\nconst memoryUsage = computed(() => {\r\n  if ('memory' in performance) {\r\n    const memory = (performance as any).memory\r\n    const used = Math.round(memory.usedJSHeapSize / 1024 / 1024)\r\n    const total = Math.round(memory.totalJSHeapSize / 1024 / 1024)\r\n    return `${used}MB / ${total}MB`\r\n  }\r\n  return '不支持'\r\n})\r\n\r\n// 方法\r\nconst runHealthCheck = async () => {\r\n  if (isRunningHealthCheck.value) return\r\n  \r\n  try {\r\n    isRunningHealthCheck.value = true\r\n    \r\n    // 检查API健康状态\r\n    const isHealthy = await apiService.checkHealth()\r\n    \r\n    // 检查WebSocket连接\r\n    const wsHealthy = isConnected()\r\n    \r\n    // 检查本地存储\r\n    const storageHealthy = typeof Storage !== 'undefined'\r\n    \r\n    // 生成健康报告\r\n    const report = {\r\n      api: isHealthy ? '✅ 正常' : '❌ 异常',\r\n      websocket: wsHealthy ? '✅ 已连接' : '❌ 断开',\r\n      storage: storageHealthy ? '✅ 可用' : '❌ 不可用',\r\n      timestamp: new Date().toLocaleString()\r\n    }\r\n    \r\n    appStore.addNotification({\r\n      type: isHealthy && wsHealthy ? 'success' : 'warning',\r\n      title: '健康检查完成',\r\n      message: `API: ${isHealthy ? '正常' : '异常'}, WebSocket: ${wsHealthy ? '连接' : '断开'}`,\r\n      duration: 5000\r\n    })\r\n    \r\n    console.log('🏥 系统健康检查报告:', report)\r\n    \r\n  } catch (error) {\r\n    console.error('健康检查失败:', error)\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '健康检查失败',\r\n      message: '无法完成系统健康检查',\r\n      duration: 5000\r\n    })\r\n  } finally {\r\n    isRunningHealthCheck.value = false\r\n  }\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  // 获取Vue版本（如果可能）\r\n  if (typeof window !== 'undefined' && (window as any).Vue) {\r\n    vueVersion.value = (window as any).Vue.version || vueVersion.value\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n/* 响应式调整 */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    @apply px-4;\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <component \r\n          :is=\"statusIcon\" \r\n          :class=\"['w-5 h-5 mr-2', statusColor]\"\r\n        />\r\n        系统状态\r\n      </h3>\r\n    </div>\r\n    \r\n    <div class=\"space-y-4\">\r\n      <!-- 当前状态 -->\r\n      <div class=\"flex items-center justify-between\">\r\n        <span class=\"text-gray-600\">运行状态</span>\r\n        <span :class=\"['status-indicator', statusClass]\">\r\n          {{ statusText }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 当前会话 -->\r\n      <div class=\"flex items-center justify-between\">\r\n        <span class=\"text-gray-600\">当前会话</span>\r\n        <span class=\"font-medium text-gray-900\">\r\n          {{ currentSessionDisplay }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 运行时间 -->\r\n      <div class=\"flex items-center justify-between\">\r\n        <span class=\"text-gray-600\">运行时间</span>\r\n        <span class=\"font-medium text-gray-900\">\r\n          {{ runningTimeDisplay }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 进度百分比（如果有） -->\r\n      <div \r\n        v-if=\"systemStatus?.progress_percentage && systemStatus.progress_percentage > 0\" \r\n        class=\"space-y-2\"\r\n      >\r\n        <div class=\"flex items-center justify-between text-sm\">\r\n          <span class=\"text-gray-600\">处理进度</span>\r\n          <span class=\"font-medium text-gray-900\">\r\n            {{ Math.round(systemStatus.progress_percentage) }}%\r\n          </span>\r\n        </div>\r\n        <div class=\"w-full bg-gray-200 rounded-full h-2\">\r\n          <div \r\n            class=\"bg-primary-500 h-2 rounded-full transition-all duration-500 ease-out\"\r\n            :style=\"{ width: `${systemStatus.progress_percentage}%` }\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { formatDuration } from '@/utils/formatters'\r\n\r\n// 图标导入\r\nimport {\r\n  PlayIcon,\r\n  PauseIcon,\r\n  ExclamationTriangleIcon,\r\n  WifiIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\nconst monitoringStore = useMonitoringStore()\r\n\r\n// 计算属性\r\nconst systemStatus = computed(() => monitoringStore.systemStatus)\r\n\r\nconst statusIcon = computed(() => {\r\n  if (!systemStatus.value) return WifiIcon\r\n  \r\n  switch (systemStatus.value.status) {\r\n    case 'running':\r\n      return PlayIcon\r\n    case 'idle':\r\n      return PauseIcon\r\n    case 'error':\r\n      return ExclamationTriangleIcon\r\n    default:\r\n      return WifiIcon\r\n  }\r\n})\r\n\r\nconst statusColor = computed(() => {\r\n  if (!systemStatus.value) return 'text-gray-500'\r\n  \r\n  switch (systemStatus.value.status) {\r\n    case 'running':\r\n      return 'text-green-500'\r\n    case 'idle':\r\n      return 'text-gray-500'\r\n    case 'error':\r\n      return 'text-red-500'\r\n    default:\r\n      return 'text-gray-500'\r\n  }\r\n})\r\n\r\nconst statusClass = computed(() => {\r\n  if (!systemStatus.value) return 'status-idle'\r\n  \r\n  switch (systemStatus.value.status) {\r\n    case 'running':\r\n      return 'status-running'\r\n    case 'idle':\r\n      return 'status-idle'\r\n    case 'error':\r\n      return 'status-error'\r\n    default:\r\n      return 'status-idle'\r\n  }\r\n})\r\n\r\nconst statusText = computed(() => {\r\n  if (!systemStatus.value) return '离线'\r\n  \r\n  switch (systemStatus.value.status) {\r\n    case 'running':\r\n      return '运行中'\r\n    case 'idle':\r\n      return '空闲'\r\n    case 'error':\r\n      return '错误'\r\n    case 'offline':\r\n      return '离线'\r\n    default:\r\n      return '未知'\r\n  }\r\n})\r\n\r\nconst currentSessionDisplay = computed(() => {\r\n  if (!systemStatus.value?.session_id) {\r\n    return '无'\r\n  }\r\n  \r\n  const sessionId = systemStatus.value.session_id\r\n  // 显示会话ID的前8位\r\n  return sessionId.length > 8 ? `${sessionId.substring(0, 8)}...` : sessionId\r\n})\r\n\r\nconst runningTimeDisplay = computed(() => {\r\n  if (!systemStatus.value?.running_time) {\r\n    return '0秒'\r\n  }\r\n  \r\n  return formatDuration(systemStatus.value.running_time)\r\n})\r\n</script>","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <ChartBarIcon class=\"w-5 h-5 mr-2 text-primary-500\" />\r\n        性能指标\r\n      </h3>\r\n      <div class=\"text-xs text-gray-500\">\r\n        {{ lastUpdateDisplay }}\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"space-y-4\">\r\n      <!-- QPS指标 -->\r\n      <div class=\"metric-item\">\r\n        <div class=\"flex justify-between items-start mb-1\">\r\n          <span class=\"text-sm text-gray-600\">查询处理速度</span>\r\n          <span class=\"text-xs text-green-600 bg-green-50 px-2 py-1 rounded-full\">\r\n            +17% ↗\r\n          </span>\r\n        </div>\r\n        <div class=\"metric-value text-2xl font-bold text-gray-900\">\r\n          {{ qpsDisplay }}\r\n        </div>\r\n        <div class=\"text-xs text-gray-500\">QPS (查询/秒)</div>\r\n      </div>\r\n      \r\n      <!-- 响应时间 -->\r\n      <div class=\"metric-item\">\r\n        <div class=\"flex justify-between items-start mb-1\">\r\n          <span class=\"text-sm text-gray-600\">平均响应时间</span>\r\n          <span class=\"text-xs text-green-600 bg-green-50 px-2 py-1 rounded-full\">\r\n            优秀\r\n          </span>\r\n        </div>\r\n        <div class=\"metric-value text-2xl font-bold text-gray-900\">\r\n          {{ averageResponseTime }}ms\r\n        </div>\r\n        <div class=\"text-xs text-gray-500\">目标: &lt;50ms</div>\r\n      </div>\r\n      \r\n      <!-- 缓存命中率 -->\r\n      <div class=\"metric-item\">\r\n        <div class=\"flex justify-between items-start mb-1\">\r\n          <span class=\"text-sm text-gray-600\">缓存命中率</span>\r\n          <span class=\"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded-full\">\r\n            588x 加速\r\n          </span>\r\n        </div>\r\n        <div class=\"metric-value text-2xl font-bold text-gray-900\">\r\n          {{ cacheHitRate }}%\r\n        </div>\r\n        <div class=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\r\n          <div \r\n            class=\"bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-1000\"\r\n            :style=\"{ width: `${cacheHitRate}%` }\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 成功率 -->\r\n      <div class=\"metric-item\">\r\n        <div class=\"flex justify-between items-start mb-1\">\r\n          <span class=\"text-sm text-gray-600\">处理成功率</span>\r\n          <component \r\n            :is=\"successRateIcon\" \r\n            :class=\"['w-4 h-4', successRateColor]\"\r\n          />\r\n        </div>\r\n        <div class=\"metric-value text-2xl font-bold text-gray-900\">\r\n          {{ successRate }}%\r\n        </div>\r\n        <div class=\"text-xs text-gray-500\">\r\n          {{ totalSessions }} 个会话\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 性能趋势迷你图 -->\r\n    <div class=\"mt-4 pt-4 border-t border-gray-200\">\r\n      <div class=\"flex justify-between items-center mb-2\">\r\n        <span class=\"text-xs text-gray-600\">24小时趋势</span>\r\n        <button \r\n          @click=\"refreshMetrics\"\r\n          :disabled=\"isRefreshing\"\r\n          class=\"text-xs text-primary-600 hover:text-primary-700 disabled:opacity-50\"\r\n        >\r\n          {{ isRefreshing ? '刷新中...' : '刷新' }}\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- 简单的趋势线（使用SVG） -->\r\n      <div class=\"h-12 w-full\">\r\n        <svg class=\"w-full h-full\" viewBox=\"0 0 200 48\">\r\n          <defs>\r\n            <linearGradient id=\"trendGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n              <stop offset=\"0%\" style=\"stop-color:#3B82F6;stop-opacity:0.8\" />\r\n              <stop offset=\"100%\" style=\"stop-color:#3B82F6;stop-opacity:0.1\" />\r\n            </linearGradient>\r\n          </defs>\r\n          \r\n          <!-- 背景网格 -->\r\n          <g stroke=\"#E5E7EB\" stroke-width=\"0.5\" opacity=\"0.5\">\r\n            <line x1=\"0\" y1=\"12\" x2=\"200\" y2=\"12\" />\r\n            <line x1=\"0\" y1=\"24\" x2=\"200\" y2=\"24\" />\r\n            <line x1=\"0\" y1=\"36\" x2=\"200\" y2=\"36\" />\r\n          </g>\r\n          \r\n          <!-- 趋势线 -->\r\n          <polyline\r\n            fill=\"none\"\r\n            stroke=\"#3B82F6\"\r\n            stroke-width=\"2\"\r\n            :points=\"trendLinePoints\"\r\n          />\r\n          \r\n          <!-- 填充区域 -->\r\n          <polygon\r\n            fill=\"url(#trendGradient)\"\r\n            :points=\"`${trendLinePoints} 200,48 0,48`\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { useAppStore } from '@/stores/app'\r\nimport { formatRelativeTime } from '@/utils/formatters'\r\nimport { apiService } from '@/services/api'\r\nimport {\r\n  ChartBarIcon,\r\n  CheckCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  XCircleIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\nconst monitoringStore = useMonitoringStore()\r\nconst appStore = useAppStore()\r\n\r\nconst isRefreshing = ref(false)\r\n\r\n// 模拟历史数据用于生成趋势线\r\nconst historicalData = ref([\r\n  { time: '00:00', qps: 645, responseTime: 1.2, cacheHit: 98, success: 96 },\r\n  { time: '04:00', qps: 520, responseTime: 1.8, cacheHit: 95, success: 94 },\r\n  { time: '08:00', qps: 780, responseTime: 1.1, cacheHit: 99, success: 98 },\r\n  { time: '12:00', qps: 892, responseTime: 0.9, cacheHit: 100, success: 99 },\r\n  { time: '16:00', qps: 756, responseTime: 1.3, cacheHit: 97, success: 97 },\r\n  { time: '20:00', qps: 671, responseTime: 1.49, cacheHit: 100, success: 98 }\r\n])\r\n\r\n// 增强监控数据\r\nconst enhancedMetrics = ref<any>(null)\r\n\r\n// 计算属性\r\nconst averageResponseTime = computed(() => {\r\n  return enhancedMetrics.value?.avg_query_time_ms || monitoringStore.averageResponseTime\r\n})\r\n\r\nconst successRate = computed(() => {\r\n  if (enhancedMetrics.value?.error_rate !== undefined) {\r\n    return Math.round((1 - enhancedMetrics.value.error_rate) * 100)\r\n  }\r\n  return monitoringStore.successRate\r\n})\r\n\r\nconst totalSessions = computed(() => {\r\n  return enhancedMetrics.value?.active_sessions || monitoringStore.totalSessions\r\n})\r\n\r\nconst qpsDisplay = computed(() => {\r\n  return enhancedMetrics.value?.queries_per_second || Math.max(100, totalSessions.value * 2.5)\r\n})\r\n\r\nconst cacheHitRate = computed(() => {\r\n  if (enhancedMetrics.value?.cache_hit_rate !== undefined) {\r\n    return Math.round(enhancedMetrics.value.cache_hit_rate * 100)\r\n  }\r\n  return historicalData.value[historicalData.value.length - 1]?.cacheHit || 100\r\n})\r\n\r\nconst lastUpdateDisplay = computed(() => {\r\n  if (!monitoringStore.lastUpdateTime) return '从未更新'\r\n  return formatRelativeTime(monitoringStore.lastUpdateTime)\r\n})\r\n\r\nconst successRateIcon = computed(() => {\r\n  if (successRate.value >= 95) return CheckCircleIcon\r\n  if (successRate.value >= 80) return ExclamationTriangleIcon\r\n  return XCircleIcon\r\n})\r\n\r\nconst successRateColor = computed(() => {\r\n  if (successRate.value >= 95) return 'text-green-500'\r\n  if (successRate.value >= 80) return 'text-yellow-500'\r\n  return 'text-red-500'\r\n})\r\n\r\n// 生成SVG趋势线点位\r\nconst trendLinePoints = computed(() => {\r\n  const data = historicalData.value\r\n  const maxQPS = Math.max(...data.map(d => d.qps))\r\n  const minQPS = Math.min(...data.map(d => d.qps))\r\n  const range = maxQPS - minQPS || 1\r\n  \r\n  return data.map((point, index) => {\r\n    const x = (index / (data.length - 1)) * 200\r\n    const y = 48 - ((point.qps - minQPS) / range) * 36 - 6\r\n    return `${x},${y}`\r\n  }).join(' ')\r\n})\r\n\r\n// 方法\r\nconst refreshMetrics = async () => {\r\n  if (isRefreshing.value) return\r\n  \r\n  try {\r\n    isRefreshing.value = true\r\n    \r\n    // 尝试获取增强监控数据\r\n    try {\r\n      const enhancedResponse = await apiService.getCurrentMetrics()\r\n      if (enhancedResponse.success) {\r\n        enhancedMetrics.value = enhancedResponse.data\r\n        console.log('✅ 获取增强监控数据成功')\r\n      }\r\n    } catch (error) {\r\n      console.warn('⚠️ 无法获取增强监控数据，使用原有数据:', error)\r\n      // 降级到原有的监控数据\r\n      await monitoringStore.fetchDashboardData()\r\n    }\r\n    \r\n    // 更新历史数据\r\n    const now = new Date()\r\n    const newDataPoint = {\r\n      time: now.toTimeString().substring(0, 5),\r\n      qps: qpsDisplay.value + (Math.random() - 0.5) * 50,\r\n      responseTime: averageResponseTime.value + (Math.random() - 0.5) * 0.5,\r\n      cacheHit: Math.min(100, cacheHitRate.value + (Math.random() - 0.5) * 5),\r\n      success: Math.min(100, successRate.value + (Math.random() - 0.5) * 3)\r\n    }\r\n    \r\n    historicalData.value.push(newDataPoint)\r\n    \r\n    // 保持最近6个数据点\r\n    if (historicalData.value.length > 6) {\r\n      historicalData.value.shift()\r\n    }\r\n    \r\n    appStore.addNotification({\r\n      type: 'success',\r\n      title: '指标已更新',\r\n      message: `性能指标数据已刷新 ${enhancedMetrics.value ? '(增强模式)' : '(标准模式)'}`,\r\n      duration: 2000\r\n    })\r\n    \r\n  } catch (error) {\r\n    console.error('刷新性能指标失败:', error)\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '刷新失败',\r\n      message: '无法更新性能指标',\r\n      duration: 3000\r\n    })\r\n  } finally {\r\n    isRefreshing.value = false\r\n  }\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  // 初始化时可能需要调整历史数据\r\n  if (totalSessions.value > 0) {\r\n    // 根据实际数据调整模拟数据\r\n    const latestData = historicalData.value[historicalData.value.length - 1]\r\n    latestData.qps = qpsDisplay.value\r\n    latestData.responseTime = averageResponseTime.value\r\n    latestData.success = successRate.value\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.metric-item {\r\n  @apply relative;\r\n}\r\n\r\n.metric-item:not(:last-child)::after {\r\n  content: '';\r\n  @apply absolute bottom-0 left-0 right-0 h-px bg-gray-100;\r\n}\r\n\r\n.metric-value {\r\n  @apply transition-all duration-300;\r\n}\r\n\r\n.metric-item:hover .metric-value {\r\n  @apply transform scale-105;\r\n}\r\n\r\n/* SVG动画 */\r\npolyline {\r\n  animation: drawLine 2s ease-in-out;\r\n}\r\n\r\n@keyframes drawLine {\r\n  from {\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 1000;\r\n  }\r\n  to {\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 0;\r\n  }\r\n}\r\n\r\npolygon {\r\n  animation: fillArea 2s ease-in-out 0.5s both;\r\n  opacity: 0;\r\n}\r\n\r\n@keyframes fillArea {\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <WifiIcon class=\"w-5 h-5 mr-2 text-primary-500\" />\r\n        连接状态\r\n      </h3>\r\n    </div>\r\n    \r\n    <div class=\"space-y-4\">\r\n      <!-- WebSocket连接状态 -->\r\n      <div class=\"connection-item\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <component \r\n              :is=\"wsStatusIcon\" \r\n              :class=\"['w-4 h-4', wsStatusColor]\"\r\n            />\r\n            <span class=\"text-sm font-medium text-gray-700\">WebSocket</span>\r\n          </div>\r\n          <span :class=\"['text-xs px-2 py-1 rounded-full', wsStatusBadgeClass]\">\r\n            {{ wsStatusText }}\r\n          </span>\r\n        </div>\r\n        \r\n        <div class=\"text-xs text-gray-500 space-y-1\">\r\n          <div v-if=\"connectionId\">连接ID: {{ connectionId }}</div>\r\n          <div>延迟: {{ wsLatency }}ms</div>\r\n          <div>重连次数: {{ wsReconnectCount }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- API连接状态 -->\r\n      <div class=\"connection-item\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <component \r\n              :is=\"apiStatusIcon\" \r\n              :class=\"['w-4 h-4', apiStatusColor]\"\r\n            />\r\n            <span class=\"text-sm font-medium text-gray-700\">API服务</span>\r\n          </div>\r\n          <span :class=\"['text-xs px-2 py-1 rounded-full', apiStatusBadgeClass]\">\r\n            {{ apiStatusText }}\r\n          </span>\r\n        </div>\r\n        \r\n        <div class=\"text-xs text-gray-500 space-y-1\">\r\n          <div>端点: /api/*</div>\r\n          <div>响应时间: {{ apiResponseTime }}ms</div>\r\n          <div>最后检查: {{ lastHealthCheck }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 数据源状态 -->\r\n      <div class=\"connection-item\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <component \r\n              :is=\"dataSourceIcon\" \r\n              :class=\"['w-4 h-4', dataSourceColor]\"\r\n            />\r\n            <span class=\"text-sm font-medium text-gray-700\">数据源</span>\r\n          </div>\r\n          <span :class=\"['text-xs px-2 py-1 rounded-full', dataSourceBadgeClass]\">\r\n            {{ dataSourceText }}\r\n          </span>\r\n        </div>\r\n        \r\n        <div class=\"text-xs text-gray-500\">\r\n          <div>{{ dataSourceDescription }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 连接操作 -->\r\n    <div class=\"mt-4 pt-4 border-t border-gray-200\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"flex items-center space-x-2\">\r\n          <button\r\n            @click=\"handleReconnect\"\r\n            :disabled=\"isReconnecting\"\r\n            class=\"text-xs bg-primary-500 text-white px-3 py-1 rounded hover:bg-primary-600 disabled:opacity-50 transition-colors\"\r\n          >\r\n            {{ isReconnecting ? '重连中...' : '重新连接' }}\r\n          </button>\r\n          \r\n          <button\r\n            @click=\"runConnectionTest\"\r\n            :disabled=\"isTestingConnection\"\r\n            class=\"text-xs bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600 disabled:opacity-50 transition-colors\"\r\n          >\r\n            {{ isTestingConnection ? '测试中...' : '连接测试' }}\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- 连接质量指示器 -->\r\n        <div class=\"flex items-center space-x-1\">\r\n          <div \r\n            v-for=\"i in 4\" \r\n            :key=\"i\"\r\n            :class=\"[\r\n              'w-1 h-3 rounded-full transition-all duration-300',\r\n              connectionQuality >= i ? 'bg-green-500' : 'bg-gray-300'\r\n            ]\"\r\n          ></div>\r\n          <span class=\"text-xs text-gray-500 ml-1\">{{ connectionQualityText }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 连接历史图表 -->\r\n    <div class=\"mt-4 pt-4 border-t border-gray-200\">\r\n      <div class=\"flex justify-between items-center mb-2\">\r\n        <span class=\"text-xs text-gray-600\">连接稳定性</span>\r\n        <span class=\"text-xs text-gray-500\">最近10分钟</span>\r\n      </div>\r\n      \r\n      <div class=\"h-8 w-full\">\r\n        <svg class=\"w-full h-full\" viewBox=\"0 0 100 32\">\r\n          <!-- 连接状态条 -->\r\n          <g v-for=\"(status, index) in connectionHistory\" :key=\"index\">\r\n            <rect\r\n              :x=\"index * 2\"\r\n              y=\"8\"\r\n              width=\"2\"\r\n              height=\"16\"\r\n              :fill=\"status ? '#10B981' : '#EF4444'\"\r\n              :opacity=\"0.8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      \r\n      <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n        <span>10分钟前</span>\r\n        <span>现在</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { useAppStore } from '@/stores/app'\r\nimport { useWebSocket } from '@/services/websocket'\r\nimport { apiService } from '@/services/api'\r\nimport { formatRelativeTime } from '@/utils/formatters'\r\nimport {\r\n  WifiIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  ServerIcon,\r\n  CloudIcon,\r\n  ComputerDesktopIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\nconst monitoringStore = useMonitoringStore()\r\nconst appStore = useAppStore()\r\nconst { isConnected, isReconnecting, connectionId, connect } = useWebSocket()\r\n\r\nconst isTestingConnection = ref(false)\r\nconst wsLatency = ref(0)\r\nconst wsReconnectCount = ref(0)\r\nconst apiResponseTime = ref(0)\r\nconst lastHealthCheck = ref<Date | null>(null)\r\n\r\n// 连接历史记录（最近50个检查点，每12秒一个）\r\nconst connectionHistory = ref<boolean[]>(new Array(50).fill(true))\r\n\r\n// 计算属性 - WebSocket状态\r\nconst wsStatusIcon = computed(() => {\r\n  if (isReconnecting()) return ExclamationTriangleIcon\r\n  return isConnected() ? CheckCircleIcon : XCircleIcon\r\n})\r\n\r\nconst wsStatusColor = computed(() => {\r\n  if (isReconnecting()) return 'text-yellow-500'\r\n  return isConnected() ? 'text-green-500' : 'text-red-500'\r\n})\r\n\r\nconst wsStatusText = computed(() => {\r\n  if (isReconnecting()) return '重连中'\r\n  return isConnected() ? '已连接' : '断开'\r\n})\r\n\r\nconst wsStatusBadgeClass = computed(() => {\r\n  if (isReconnecting()) return 'bg-yellow-100 text-yellow-800'\r\n  return isConnected() ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n})\r\n\r\n// 计算属性 - API状态\r\nconst apiStatusIcon = computed(() => {\r\n  return monitoringStore.isConnected ? CheckCircleIcon : XCircleIcon\r\n})\r\n\r\nconst apiStatusColor = computed(() => {\r\n  return monitoringStore.isConnected ? 'text-green-500' : 'text-red-500'\r\n})\r\n\r\nconst apiStatusText = computed(() => {\r\n  return monitoringStore.isConnected ? '正常' : '异常'\r\n})\r\n\r\nconst apiStatusBadgeClass = computed(() => {\r\n  return monitoringStore.isConnected ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n})\r\n\r\n// 计算属性 - 数据源状态\r\nconst dataSourceIcon = computed(() => {\r\n  switch (monitoringStore.dataSource) {\r\n    case 'live':\r\n      return ServerIcon\r\n    case 'test':\r\n      return ComputerDesktopIcon\r\n    default:\r\n      return CloudIcon\r\n  }\r\n})\r\n\r\nconst dataSourceColor = computed(() => {\r\n  switch (monitoringStore.dataSource) {\r\n    case 'live':\r\n      return 'text-green-500'\r\n    case 'test':\r\n      return 'text-blue-500'\r\n    default:\r\n      return 'text-yellow-500'\r\n  }\r\n})\r\n\r\nconst dataSourceText = computed(() => {\r\n  switch (monitoringStore.dataSource) {\r\n    case 'live':\r\n      return '实时数据'\r\n    case 'test':\r\n      return '测试数据'\r\n    default:\r\n      return '模拟数据'\r\n  }\r\n})\r\n\r\nconst dataSourceBadgeClass = computed(() => {\r\n  switch (monitoringStore.dataSource) {\r\n    case 'live':\r\n      return 'bg-green-100 text-green-800'\r\n    case 'test':\r\n      return 'bg-blue-100 text-blue-800'\r\n    default:\r\n      return 'bg-yellow-100 text-yellow-800'\r\n  }\r\n})\r\n\r\nconst dataSourceDescription = computed(() => {\r\n  switch (monitoringStore.dataSource) {\r\n    case 'live':\r\n      return 'Estia系统运行中，数据实时更新'\r\n    case 'test':\r\n      return '使用测试数据进行演示'\r\n    default:\r\n      return '使用模拟数据，功能受限'\r\n  }\r\n})\r\n\r\n// 连接质量评估\r\nconst connectionQuality = computed(() => {\r\n  let quality = 0\r\n  \r\n  if (isConnected()) quality += 1\r\n  if (monitoringStore.isConnected) quality += 1\r\n  if (wsLatency.value < 100) quality += 1\r\n  if (wsReconnectCount.value < 3) quality += 1\r\n  \r\n  return quality\r\n})\r\n\r\nconst connectionQualityText = computed(() => {\r\n  switch (connectionQuality.value) {\r\n    case 4: return '优秀'\r\n    case 3: return '良好'\r\n    case 2: return '一般'\r\n    case 1: return '较差'\r\n    default: return '断开'\r\n  }\r\n})\r\n\r\nconst lastHealthCheckDisplay = computed(() => {\r\n  if (!lastHealthCheck.value) return '从未'\r\n  return formatRelativeTime(lastHealthCheck.value)\r\n})\r\n\r\n// 方法\r\nconst handleReconnect = async () => {\r\n  try {\r\n    await connect()\r\n    \r\n    appStore.addNotification({\r\n      type: 'success',\r\n      title: '重连成功',\r\n      message: 'WebSocket连接已恢复',\r\n      duration: 3000\r\n    })\r\n    \r\n    wsReconnectCount.value++\r\n  } catch (error) {\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '重连失败',\r\n      message: '无法建立WebSocket连接',\r\n      duration: 5000\r\n    })\r\n  }\r\n}\r\n\r\nconst runConnectionTest = async () => {\r\n  if (isTestingConnection.value) return\r\n  \r\n  try {\r\n    isTestingConnection.value = true\r\n    \r\n    // 测试API连接\r\n    const startTime = Date.now()\r\n    const isHealthy = await apiService.checkHealth()\r\n    const endTime = Date.now()\r\n    \r\n    apiResponseTime.value = endTime - startTime\r\n    lastHealthCheck.value = new Date()\r\n    \r\n    // 测试WebSocket延迟\r\n    if (isConnected()) {\r\n      const wsStart = Date.now()\r\n      // 发送ping消息测试延迟\r\n      setTimeout(() => {\r\n        wsLatency.value = Date.now() - wsStart\r\n      }, 50)\r\n    }\r\n    \r\n    const testResult = {\r\n      api: isHealthy,\r\n      websocket: isConnected(),\r\n      latency: apiResponseTime.value\r\n    }\r\n    \r\n    appStore.addNotification({\r\n      type: testResult.api && testResult.websocket ? 'success' : 'warning',\r\n      title: '连接测试完成',\r\n      message: `API: ${testResult.api ? '正常' : '异常'}, WebSocket: ${testResult.websocket ? '正常' : '异常'}, 延迟: ${testResult.latency}ms`,\r\n      duration: 5000\r\n    })\r\n    \r\n  } catch (error) {\r\n    console.error('连接测试失败:', error)\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '测试失败',\r\n      message: '无法完成连接测试',\r\n      duration: 5000\r\n    })\r\n  } finally {\r\n    isTestingConnection.value = false\r\n  }\r\n}\r\n\r\n// 更新连接历史\r\nconst updateConnectionHistory = () => {\r\n  const currentStatus = isConnected() && monitoringStore.isConnected\r\n  \r\n  connectionHistory.value.push(currentStatus)\r\n  \r\n  // 保持固定长度\r\n  if (connectionHistory.value.length > 50) {\r\n    connectionHistory.value.shift()\r\n  }\r\n}\r\n\r\n// 定时器\r\nlet historyTimer: NodeJS.Timeout | null = null\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  // 初始化连接测试\r\n  runConnectionTest()\r\n  \r\n  // 每12秒更新一次连接历史\r\n  historyTimer = setInterval(updateConnectionHistory, 12000)\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (historyTimer) {\r\n    clearInterval(historyTimer)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.connection-item {\r\n  @apply p-3 bg-gray-50 rounded-lg;\r\n}\r\n\r\n.connection-item:hover {\r\n  @apply bg-gray-100 transition-colors;\r\n}\r\n\r\n/* 连接质量指示器动画 */\r\n.w-1 {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.w-1:nth-child(1) {\r\n  animation-delay: 0s;\r\n}\r\n.w-1:nth-child(2) {\r\n  animation-delay: 0.1s;\r\n}\r\n.w-1:nth-child(3) {\r\n  animation-delay: 0.2s;\r\n}\r\n.w-1:nth-child(4) {\r\n  animation-delay: 0.3s;\r\n}\r\n\r\n@keyframes pulse-quality {\r\n  0%, 100% { transform: scaleY(1); }\r\n  50% { transform: scaleY(1.2); }\r\n}\r\n\r\n.bg-green-500 {\r\n  animation: pulse-quality 2s infinite;\r\n}\r\n</style>","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <BoltIcon class=\"w-5 h-5 mr-2 text-primary-500\" />\r\n        快速操作\r\n      </h3>\r\n    </div>\r\n    \r\n    <div class=\"space-y-3\">\r\n      <button\r\n        @click=\"refreshData\"\r\n        :disabled=\"isRefreshing\"\r\n        class=\"w-full flex items-center justify-center px-4 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 disabled:opacity-50 transition-colors\"\r\n      >\r\n        <ArrowPathIcon :class=\"['w-4 h-4 mr-2', { 'animate-spin': isRefreshing }]\" />\r\n        {{ isRefreshing ? '刷新中...' : '刷新数据' }}\r\n      </button>\r\n      \r\n      <button\r\n        @click=\"exportData\"\r\n        :disabled=\"isExporting\"\r\n        class=\"w-full flex items-center justify-center px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 disabled:opacity-50 transition-colors\"\r\n      >\r\n        <DocumentArrowDownIcon :class=\"['w-4 h-4 mr-2', { 'animate-pulse': isExporting }]\" />\r\n        {{ isExporting ? '导出中...' : '导出数据' }}\r\n      </button>\r\n      \r\n      <button\r\n        @click=\"clearData\"\r\n        class=\"w-full flex items-center justify-center px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\r\n      >\r\n        <TrashIcon class=\"w-4 h-4 mr-2\" />\r\n        清空数据\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { useAppStore } from '@/stores/app'\r\nimport {\r\n  BoltIcon,\r\n  ArrowPathIcon,\r\n  DocumentArrowDownIcon,\r\n  TrashIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\nconst monitoringStore = useMonitoringStore()\r\nconst appStore = useAppStore()\r\n\r\nconst isRefreshing = ref(false)\r\nconst isExporting = ref(false)\r\n\r\nconst refreshData = async () => {\r\n  if (isRefreshing.value) return\r\n  \r\n  try {\r\n    isRefreshing.value = true\r\n    await monitoringStore.fetchDashboardData()\r\n    \r\n    appStore.addNotification({\r\n      type: 'success',\r\n      title: '刷新成功',\r\n      message: '数据已更新',\r\n      duration: 2000\r\n    })\r\n  } catch (error) {\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '刷新失败',\r\n      message: '无法获取最新数据',\r\n      duration: 3000\r\n    })\r\n  } finally {\r\n    isRefreshing.value = false\r\n  }\r\n}\r\n\r\nconst exportData = async () => {\r\n  if (isExporting.value) return\r\n  \r\n  try {\r\n    isExporting.value = true\r\n    \r\n    // 模拟导出过程\r\n    await new Promise(resolve => setTimeout(resolve, 1500))\r\n    \r\n    appStore.addNotification({\r\n      type: 'success',\r\n      title: '导出成功',\r\n      message: '数据已导出到下载目录',\r\n      duration: 3000\r\n    })\r\n  } catch (error) {\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '导出失败',\r\n      message: '无法导出数据',\r\n      duration: 3000\r\n    })\r\n  } finally {\r\n    isExporting.value = false\r\n  }\r\n}\r\n\r\nconst clearData = () => {\r\n  if (confirm('确定要清空所有监控数据吗？此操作不可撤销。')) {\r\n    monitoringStore.reset()\r\n    \r\n    appStore.addNotification({\r\n      type: 'info',\r\n      title: '数据已清空',\r\n      message: '所有监控数据已重置',\r\n      duration: 3000\r\n    })\r\n  }\r\n}\r\n</script>","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <ChartBarIcon class=\"w-5 h-5 mr-2 text-primary-500\" />\r\n        性能趋势\r\n      </h3>\r\n      <div class=\"flex items-center space-x-2\">\r\n        <select\r\n          v-model=\"selectedMetric\"\r\n          class=\"text-xs border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n        >\r\n          <option value=\"response_time\">响应时间</option>\r\n          <option value=\"qps\">QPS</option>\r\n          <option value=\"success_rate\">成功率</option>\r\n          <option value=\"cache_hit\">缓存命中率</option>\r\n        </select>\r\n        \r\n        <button\r\n          @click=\"refreshChart\"\r\n          :disabled=\"isRefreshing\"\r\n          class=\"text-xs text-primary-600 hover:text-primary-700 disabled:opacity-50\"\r\n        >\r\n          {{ isRefreshing ? '刷新中...' : '刷新' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"relative\">\r\n      <!-- 图表容器 -->\r\n      <div ref=\"chartContainer\" class=\"h-64 w-full\">\r\n        <canvas ref=\"chartCanvas\"></canvas>\r\n      </div>\r\n      \r\n      <!-- 加载状态 -->\r\n      <div \r\n        v-if=\"isLoading\" \r\n        class=\"absolute inset-0 flex items-center justify-center bg-white/80 backdrop-blur-sm\"\r\n      >\r\n        <div class=\"flex items-center space-x-2 text-gray-600\">\r\n          <div class=\"w-4 h-4 border-2 border-primary-500 border-t-transparent rounded-full animate-spin\"></div>\r\n          <span class=\"text-sm\">加载中...</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 无数据状态 -->\r\n      <div \r\n        v-if=\"!isLoading && !hasData\" \r\n        class=\"absolute inset-0 flex items-center justify-center\"\r\n      >\r\n        <div class=\"text-center text-gray-500\">\r\n          <ChartBarIcon class=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n          <p class=\"text-sm\">暂无性能数据</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 统计信息 -->\r\n    <div class=\"mt-4 pt-4 border-t border-gray-200\">\r\n      <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\r\n        <div>\r\n          <div class=\"text-lg font-semibold text-gray-900\">{{ currentValue }}</div>\r\n          <div class=\"text-xs text-gray-600\">当前值</div>\r\n        </div>\r\n        <div>\r\n          <div class=\"text-lg font-semibold text-green-600\">{{ maxValue }}</div>\r\n          <div class=\"text-xs text-gray-600\">最高值</div>\r\n        </div>\r\n        <div>\r\n          <div class=\"text-lg font-semibold text-blue-600\">{{ avgValue }}</div>\r\n          <div class=\"text-xs text-gray-600\">平均值</div>\r\n        </div>\r\n        <div>\r\n          <div class=\"text-lg font-semibold text-red-600\">{{ minValue }}</div>\r\n          <div class=\"text-xs text-gray-600\">最低值</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, onUnmounted, computed, watch, nextTick } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { ChartBarIcon } from '@heroicons/vue/24/outline'\r\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, LineController, Title, Tooltip, Legend, Filler } from 'chart.js'\r\n\r\n// 注册Chart.js组件\r\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, LineController, Title, Tooltip, Legend, Filler)\r\n\r\nconst monitoringStore = useMonitoringStore()\r\n\r\nconst chartContainer = ref<HTMLDivElement>()\r\nconst chartCanvas = ref<HTMLCanvasElement>()\r\nconst chart = ref<Chart | null>(null)\r\n\r\nconst selectedMetric = ref('response_time')\r\nconst isLoading = ref(false)\r\nconst isRefreshing = ref(false)\r\n\r\n// 模拟历史数据\r\nconst historicalData = ref([\r\n  { time: '10:00', response_time: 1.2, qps: 645, success_rate: 96, cache_hit: 98 },\r\n  { time: '10:30', response_time: 1.8, qps: 520, success_rate: 94, cache_hit: 95 },\r\n  { time: '11:00', response_time: 1.1, qps: 780, success_rate: 98, cache_hit: 99 },\r\n  { time: '11:30', response_time: 0.9, qps: 892, success_rate: 99, cache_hit: 100 },\r\n  { time: '12:00', response_time: 1.3, qps: 756, success_rate: 97, cache_hit: 97 },\r\n  { time: '12:30', response_time: 1.49, qps: 671, success_rate: 98, cache_hit: 100 }\r\n])\r\n\r\n// 计算属性\r\nconst hasData = computed(() => historicalData.value.length > 0)\r\n\r\nconst currentData = computed(() => {\r\n  const data = historicalData.value\r\n  return data.map(item => item[selectedMetric.value as keyof typeof item])\r\n})\r\n\r\nconst currentValue = computed(() => {\r\n  const data = currentData.value\r\n  return data.length > 0 ? formatValue(data[data.length - 1]) : '--'\r\n})\r\n\r\nconst maxValue = computed(() => {\r\n  const data = currentData.value\r\n  return data.length > 0 ? formatValue(Math.max(...data)) : '--'\r\n})\r\n\r\nconst minValue = computed(() => {\r\n  const data = currentData.value\r\n  return data.length > 0 ? formatValue(Math.min(...data)) : '--'\r\n})\r\n\r\nconst avgValue = computed(() => {\r\n  const data = currentData.value\r\n  if (data.length === 0) return '--'\r\n  const avg = data.reduce((sum, val) => sum + val, 0) / data.length\r\n  return formatValue(avg)\r\n})\r\n\r\n// 方法\r\nconst formatValue = (value: number): string => {\r\n  switch (selectedMetric.value) {\r\n    case 'response_time':\r\n      return `${value.toFixed(2)}ms`\r\n    case 'qps':\r\n      return Math.round(value).toString()\r\n    case 'success_rate':\r\n    case 'cache_hit':\r\n      return `${Math.round(value)}%`\r\n    default:\r\n      return value.toString()\r\n  }\r\n}\r\n\r\nconst getChartConfig = () => {\r\n  const labels = historicalData.value.map(item => item.time)\r\n  const data = currentData.value\r\n  \r\n  const colors = {\r\n    response_time: { bg: 'rgba(59, 130, 246, 0.1)', border: 'rgb(59, 130, 246)' },\r\n    qps: { bg: 'rgba(16, 185, 129, 0.1)', border: 'rgb(16, 185, 129)' },\r\n    success_rate: { bg: 'rgba(245, 158, 11, 0.1)', border: 'rgb(245, 158, 11)' },\r\n    cache_hit: { bg: 'rgba(139, 92, 246, 0.1)', border: 'rgb(139, 92, 246)' }\r\n  }\r\n  \r\n  const color = colors[selectedMetric.value as keyof typeof colors]\r\n  \r\n  return {\r\n    type: 'line' as const,\r\n    data: {\r\n      labels,\r\n      datasets: [{\r\n        label: getMetricLabel(),\r\n        data,\r\n        backgroundColor: color.bg,\r\n        borderColor: color.border,\r\n        borderWidth: 2,\r\n        fill: true,\r\n        tension: 0.4,\r\n        pointRadius: 4,\r\n        pointHoverRadius: 6,\r\n        pointBackgroundColor: color.border,\r\n        pointBorderColor: '#ffffff',\r\n        pointBorderWidth: 2\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        title: {\r\n          display: false\r\n        },\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          mode: 'index' as const,\r\n          intersect: false,\r\n          callbacks: {\r\n            label: (context: any) => {\r\n              return `${getMetricLabel()}: ${formatValue(context.parsed.y)}`\r\n            }\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          display: true,\r\n          grid: {\r\n            display: false\r\n          },\r\n          ticks: {\r\n            font: {\r\n              size: 11\r\n            }\r\n          }\r\n        },\r\n        y: {\r\n          display: true,\r\n          grid: {\r\n            color: 'rgba(0, 0, 0, 0.05)'\r\n          },\r\n          ticks: {\r\n            font: {\r\n              size: 11\r\n            },\r\n            callback: (value: any) => formatValue(value)\r\n          }\r\n        }\r\n      },\r\n      interaction: {\r\n        mode: 'nearest' as const,\r\n        axis: 'x' as const,\r\n        intersect: false\r\n      },\r\n      animation: {\r\n        duration: 750,\r\n        easing: 'easeInOutQuart'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getMetricLabel = (): string => {\r\n  switch (selectedMetric.value) {\r\n    case 'response_time':\r\n      return '响应时间'\r\n    case 'qps':\r\n      return 'QPS'\r\n    case 'success_rate':\r\n      return '成功率'\r\n    case 'cache_hit':\r\n      return '缓存命中率'\r\n    default:\r\n      return '未知指标'\r\n  }\r\n}\r\n\r\nconst initChart = async () => {\r\n  if (!chartCanvas.value) return\r\n  \r\n  await nextTick()\r\n  \r\n  // 销毁现有图表\r\n  if (chart.value) {\r\n    chart.value.destroy()\r\n  }\r\n  \r\n  // 创建新图表\r\n  chart.value = new Chart(chartCanvas.value, getChartConfig())\r\n}\r\n\r\nconst refreshChart = async () => {\r\n  if (isRefreshing.value) return\r\n  \r\n  try {\r\n    isRefreshing.value = true\r\n    \r\n    // 模拟数据刷新\r\n    await new Promise(resolve => setTimeout(resolve, 800))\r\n    \r\n    // 添加新的数据点\r\n    const now = new Date()\r\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`\r\n    \r\n    const newDataPoint = {\r\n      time: timeStr,\r\n      response_time: 1.2 + (Math.random() - 0.5) * 0.8,\r\n      qps: 650 + (Math.random() - 0.5) * 200,\r\n      success_rate: 95 + Math.random() * 5,\r\n      cache_hit: 95 + Math.random() * 5\r\n    }\r\n    \r\n    historicalData.value.push(newDataPoint)\r\n    \r\n    // 保持最近10个数据点\r\n    if (historicalData.value.length > 10) {\r\n      historicalData.value.shift()\r\n    }\r\n    \r\n    // 更新图表\r\n    await initChart()\r\n    \r\n  } finally {\r\n    isRefreshing.value = false\r\n  }\r\n}\r\n\r\n// 监听选中指标变化\r\nwatch(selectedMetric, () => {\r\n  initChart()\r\n})\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  initChart()\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (chart.value) {\r\n    chart.value.destroy()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\ncanvas {\r\n  max-height: 256px;\r\n}\r\n</style>","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <HashtagIcon class=\"w-5 h-5 mr-2 text-primary-500\" />\r\n        关键词分析\r\n      </h3>\r\n      <div class=\"text-xs text-gray-500\">\r\n        {{ totalKeywords }} 个关键词\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"relative h-64\">\r\n      <!-- 关键词云 -->\r\n      <div v-if=\"hasKeywords\" class=\"h-full flex flex-wrap content-center justify-center p-4 space-x-2 space-y-2 overflow-hidden\">\r\n        <span\r\n          v-for=\"(keyword, index) in displayKeywords\"\r\n          :key=\"keyword.word\"\r\n          :class=\"[\r\n            'inline-block px-3 py-1 rounded-full transition-all duration-300 cursor-pointer hover:scale-110',\r\n            getKeywordClass(keyword.frequency),\r\n            'animate-fade-in'\r\n          ]\"\r\n          :style=\"{\r\n            fontSize: getKeywordSize(keyword.frequency),\r\n            animationDelay: `${index * 100}ms`\r\n          }\"\r\n          @click=\"selectKeyword(keyword)\"\r\n          :title=\"`出现 ${keyword.count} 次，频率 ${(keyword.frequency * 100).toFixed(1)}%`\"\r\n        >\r\n          {{ keyword.word }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 无数据状态 -->\r\n      <div v-else class=\"h-full flex items-center justify-center\">\r\n        <div class=\"text-center text-gray-500\">\r\n          <HashtagIcon class=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n          <p class=\"text-sm\">暂无关键词数据</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 加载状态 -->\r\n      <div \r\n        v-if=\"isLoading\" \r\n        class=\"absolute inset-0 flex items-center justify-center bg-white/80 backdrop-blur-sm\"\r\n      >\r\n        <div class=\"flex items-center space-x-2 text-gray-600\">\r\n          <div class=\"w-4 h-4 border-2 border-primary-500 border-t-transparent rounded-full animate-spin\"></div>\r\n          <span class=\"text-sm\">分析中...</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 关键词统计 -->\r\n    <div class=\"mt-4 pt-4 border-t border-gray-200\">\r\n      <div class=\"flex items-center justify-between mb-3\">\r\n        <span class=\"text-sm font-medium text-gray-700\">热门关键词</span>\r\n        <button\r\n          @click=\"refreshKeywords\"\r\n          :disabled=\"isRefreshing\"\r\n          class=\"text-xs text-primary-600 hover:text-primary-700 disabled:opacity-50\"\r\n        >\r\n          {{ isRefreshing ? '刷新中...' : '刷新' }}\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"space-y-2\">\r\n        <div\r\n          v-for=\"(keyword, index) in topKeywords\"\r\n          :key=\"keyword.word\"\r\n          class=\"flex items-center justify-between text-sm\"\r\n        >\r\n          <div class=\"flex items-center space-x-2\">\r\n            <span class=\"w-4 h-4 text-xs bg-gray-100 rounded-full flex items-center justify-center\">\r\n              {{ index + 1 }}\r\n            </span>\r\n            <span class=\"text-gray-700\">{{ keyword.word }}</span>\r\n          </div>\r\n          \r\n          <div class=\"flex items-center space-x-2\">\r\n            <div class=\"w-16 bg-gray-200 rounded-full h-1.5\">\r\n              <div \r\n                class=\"bg-primary-500 h-1.5 rounded-full transition-all duration-500\"\r\n                :style=\"{ width: `${(keyword.frequency / maxFrequency) * 100}%` }\"\r\n              ></div>\r\n            </div>\r\n            <span class=\"text-xs text-gray-500 w-8 text-right\">{{ keyword.count }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 选中关键词详情 -->\r\n    <div v-if=\"selectedKeyword\" class=\"mt-4 p-3 bg-blue-50 rounded-lg\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <h4 class=\"font-medium text-blue-900\">{{ selectedKeyword.word }}</h4>\r\n        <button\r\n          @click=\"selectedKeyword = null\"\r\n          class=\"text-blue-600 hover:text-blue-800\"\r\n        >\r\n          <XMarkIcon class=\"w-4 h-4\" />\r\n        </button>\r\n      </div>\r\n      <div class=\"text-sm text-blue-700 space-y-1\">\r\n        <div>出现次数: {{ selectedKeyword.count }}</div>\r\n        <div>出现频率: {{ (selectedKeyword.frequency * 100).toFixed(1) }}%</div>\r\n        <div>相关度: {{ getRelevanceLevel(selectedKeyword.frequency) }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { HashtagIcon, XMarkIcon } from '@heroicons/vue/24/outline'\r\nimport type { KeywordData } from '@/types'\r\n\r\nconst monitoringStore = useMonitoringStore()\r\n\r\nconst isLoading = ref(false)\r\nconst isRefreshing = ref(false)\r\nconst selectedKeyword = ref<KeywordData | null>(null)\r\n\r\n// 模拟关键词数据\r\nconst mockKeywords = ref<KeywordData[]>([\r\n  { word: '监控', count: 45, frequency: 0.8 },\r\n  { word: '性能', count: 38, frequency: 0.68 },\r\n  { word: '数据', count: 32, frequency: 0.57 },\r\n  { word: '系统', count: 28, frequency: 0.5 },\r\n  { word: '实时', count: 25, frequency: 0.45 },\r\n  { word: '分析', count: 22, frequency: 0.39 },\r\n  { word: '会话', count: 20, frequency: 0.36 },\r\n  { word: '缓存', count: 18, frequency: 0.32 },\r\n  { word: '优化', count: 15, frequency: 0.27 },\r\n  { word: '响应', count: 12, frequency: 0.21 },\r\n  { word: '查询', count: 10, frequency: 0.18 },\r\n  { word: '记忆', count: 8, frequency: 0.14 },\r\n  { word: '流程', count: 6, frequency: 0.11 },\r\n  { word: '评估', count: 5, frequency: 0.09 },\r\n  { word: '上下文', count: 4, frequency: 0.07 }\r\n])\r\n\r\n// 计算属性\r\nconst keywords = computed(() => {\r\n  return monitoringStore.keywords?.top_keywords || mockKeywords.value\r\n})\r\n\r\nconst hasKeywords = computed(() => keywords.value.length > 0)\r\n\r\nconst totalKeywords = computed(() => {\r\n  return monitoringStore.keywords?.total_unique_keywords || keywords.value.length\r\n})\r\n\r\nconst displayKeywords = computed(() => {\r\n  return keywords.value.slice(0, 15) // 最多显示15个关键词\r\n})\r\n\r\nconst topKeywords = computed(() => {\r\n  return keywords.value.slice(0, 8) // 显示前8个关键词的统计\r\n})\r\n\r\nconst maxFrequency = computed(() => {\r\n  return Math.max(...keywords.value.map(k => k.frequency))\r\n})\r\n\r\n// 方法\r\nconst getKeywordSize = (frequency: number): string => {\r\n  const baseSize = 12\r\n  const maxSize = 20\r\n  const size = baseSize + (frequency * (maxSize - baseSize))\r\n  return `${Math.round(size)}px`\r\n}\r\n\r\nconst getKeywordClass = (frequency: number): string => {\r\n  if (frequency >= 0.6) {\r\n    return 'bg-red-100 text-red-800 hover:bg-red-200'\r\n  } else if (frequency >= 0.4) {\r\n    return 'bg-orange-100 text-orange-800 hover:bg-orange-200'\r\n  } else if (frequency >= 0.2) {\r\n    return 'bg-blue-100 text-blue-800 hover:bg-blue-200'\r\n  } else {\r\n    return 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n  }\r\n}\r\n\r\nconst getRelevanceLevel = (frequency: number): string => {\r\n  if (frequency >= 0.6) return '高'\r\n  if (frequency >= 0.3) return '中'\r\n  return '低'\r\n}\r\n\r\nconst selectKeyword = (keyword: KeywordData) => {\r\n  selectedKeyword.value = keyword\r\n}\r\n\r\nconst refreshKeywords = async () => {\r\n  if (isRefreshing.value) return\r\n  \r\n  try {\r\n    isRefreshing.value = true\r\n    \r\n    // 模拟数据刷新\r\n    await new Promise(resolve => setTimeout(resolve, 1000))\r\n    \r\n    // 模拟关键词数据更新\r\n    mockKeywords.value = mockKeywords.value.map(keyword => ({\r\n      ...keyword,\r\n      count: keyword.count + Math.floor(Math.random() * 5),\r\n      frequency: Math.min(1, keyword.frequency + (Math.random() - 0.5) * 0.1)\r\n    }))\r\n    \r\n    // 按频率重新排序\r\n    mockKeywords.value.sort((a, b) => b.frequency - a.frequency)\r\n    \r\n  } finally {\r\n    isRefreshing.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  // 初始化时可以从监控存储中获取真实数据\r\n  if (!hasKeywords.value) {\r\n    // 使用模拟数据\r\n    console.log('使用模拟关键词数据')\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n@keyframes fade-in {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.8);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.animate-fade-in {\r\n  animation: fade-in 0.5s ease-out forwards;\r\n  opacity: 0;\r\n}\r\n\r\n/* 关键词悬停效果 */\r\n.keyword-cloud span:hover {\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  transform: translateY(-2px) scale(1.05);\r\n}\r\n\r\n/* 进度条动画 */\r\n.h-1\\.5 {\r\n  transition: width 0.5s ease-in-out;\r\n}\r\n</style>","<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3 class=\"card-title flex items-center\">\n        <ChatBubbleLeftRightIcon class=\"w-5 h-5 mr-2 text-primary-500\" />\n        会话记录\n      </h3>\n      <div class=\"flex items-center space-x-2\">\n        <span class=\"text-xs text-gray-600\">{{ sessions.length }} 个会话</span>\n        <button\n          @click=\"refreshSessions\"\n          :disabled=\"isRefreshing\"\n          class=\"text-xs text-primary-600 hover:text-primary-700 disabled:opacity-50\"\n        >\n          {{ isRefreshing ? '刷新中...' : '刷新' }}\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"space-y-3\">\n      <div\n        v-for=\"session in sessions\"\n        :key=\"session.id\"\n        class=\"border border-gray-200 rounded-lg p-3 hover:shadow-sm transition-shadow cursor-pointer\"\n        @click=\"toggleSessionDetails(session.id)\"\n      >\n        <!-- 会话头部 -->\n        <div class=\"flex items-center justify-between mb-2\">\n          <div class=\"flex items-center space-x-3\">\n            <div class=\"font-medium text-gray-900 truncate\">\n              会话 {{ session.id.substring(0, 10) }}...\n            </div>\n            <div class=\"flex items-center space-x-2 text-xs text-gray-500\">\n              <span>{{ session.response_time }}s</span>\n              <span>{{ session.time_ago }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 用户输入 -->\n        <div class=\"mb-2\">\n          <div class=\"text-xs font-medium text-gray-600 mb-1\">用户:</div>\n          <div class=\"text-sm text-gray-800 line-clamp-2\">{{ session.user_input }}</div>\n        </div>\n        \n        <!-- AI 响应 -->\n        <div class=\"mb-3\">\n          <div class=\"text-xs font-medium text-gray-600 mb-1\">AI:</div>\n          <div class=\"text-sm text-gray-800 line-clamp-3\">{{ session.ai_response }}</div>\n        </div>\n        \n        <!-- 统计信息 -->\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center space-x-4 text-xs text-gray-500\">\n            <div class=\"flex items-center space-x-1\">\n              <ChatBubbleLeftRightIcon class=\"w-4 h-4\" />\n              <span>{{ session.interactions }}</span>\n            </div>\n            <div class=\"flex items-center space-x-1\">\n              <HeartIcon class=\"w-4 h-4\" />\n              <span>{{ session.rating }}</span>\n            </div>\n          </div>\n          <ChevronDownIcon \n            class=\"w-4 h-4 text-gray-400 transition-transform\"\n            :class=\"{ 'rotate-180': expandedSessions.has(session.id) }\"\n          />\n        </div>\n        \n        <!-- 展开的详细信息 -->\n        <div \n          v-if=\"expandedSessions.has(session.id)\"\n          class=\"mt-3 pt-3 border-t border-gray-100\"\n        >\n          <div class=\"text-xs text-gray-600\">\n            <div class=\"mb-2\">\n              <strong>完整对话:</strong>\n            </div>\n            <div class=\"bg-gray-50 rounded p-2 text-xs\">\n              <div class=\"mb-2\">\n                <span class=\"font-medium text-blue-600\">用户:</span> {{ session.user_input }}\n              </div>\n              <div>\n                <span class=\"font-medium text-green-600\">AI:</span> {{ session.ai_response }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue'\nimport { ChatBubbleLeftRightIcon, HeartIcon, ChevronDownIcon } from '@heroicons/vue/24/outline'\n\ninterface Session {\n  id: string\n  user_input: string\n  ai_response: string\n  response_time: number\n  time_ago: string\n  interactions: number\n  rating: number\n}\n\nconst sessions = ref<Session[]>([\n  {\n    id: 'session_001_2025_01_23_14_30',\n    user_input: '请帮我分析一下系统的性能瓶颈在哪里？',\n    ai_response: '根据监控数据分析，系统主要瓶颈在数据库查询和缓存命中率方面...',\n    response_time: 2.5,\n    time_ago: '5 分钟前',\n    interactions: 12,\n    rating: 0\n  },\n  {\n    id: 'session_002_2025_01_23_14_20',\n    user_input: '如何优化记忆检索的速度？',\n    ai_response: '可以通过以下几个方面来优化记忆检索速度：1. 使用向量索引...',\n    response_time: 1.8,\n    time_ago: '10 分钟前',\n    interactions: 8,\n    rating: 1\n  },\n  {\n    id: 'session_003_2025_01_23_14_15',\n    user_input: '系统的缓存命中率为什么这么高？',\n    ai_response: '系统采用了多级缓存策略，包括统一缓存管理器和588倍加速技术...',\n    response_time: 3.2,\n    time_ago: '15 分钟前',\n    interactions: 15,\n    rating: 0\n  }\n])\n\nconst isRefreshing = ref(false)\nconst expandedSessions = ref(new Set<string>())\n\nconst refreshSessions = async () => {\n  if (isRefreshing.value) return\n  \n  try {\n    isRefreshing.value = true\n    // 模拟刷新延迟\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    // 这里可以添加实际的数据刷新逻辑\n  } finally {\n    isRefreshing.value = false\n  }\n}\n\nconst toggleSessionDetails = (sessionId: string) => {\n  if (expandedSessions.value.has(sessionId)) {\n    expandedSessions.value.delete(sessionId)\n  } else {\n    expandedSessions.value.add(sessionId)\n  }\n}\n\nonMounted(() => {\n  // 组件挂载时的初始化逻辑\n})\n</script>\n\n<style scoped>\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.line-clamp-3 {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n</style>","<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3 class=\"card-title flex items-center\">\n        <BrainIcon class=\"w-5 h-5 mr-2 text-primary-500\" />\n        记忆分析\n      </h3>\n      <button\n        @click=\"refreshAnalysis\"\n        :disabled=\"isRefreshing\"\n        class=\"text-xs px-3 py-1 bg-primary-50 text-primary-600 hover:bg-primary-100 rounded-full transition-colors disabled:opacity-50\"\n      >\n        {{ isRefreshing ? '🔄 刷新中...' : '🔄 刷新分析' }}\n      </button>\n    </div>\n    \n    <div class=\"space-y-6\">\n      <!-- 平均相似度 -->\n      <div class=\"text-center\">\n        <h4 class=\"text-sm font-semibold text-gray-700 mb-2\">平均相似度</h4>\n        <div class=\"text-3xl font-bold text-primary-600\">{{ averageSimilarity }}%</div>\n      </div>\n      \n      <!-- 相似度分布 -->\n      <div>\n        <h4 class=\"text-sm font-semibold text-gray-700 mb-3\">相似度分布</h4>\n        <div class=\"space-y-2\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center space-x-2\">\n              <div class=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n              <span class=\"text-sm text-gray-600\">高 (>0.8)</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <div class=\"text-sm font-medium\">{{ distributionData.high }}</div>\n            </div>\n          </div>\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center space-x-2\">\n              <div class=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n              <span class=\"text-sm text-gray-600\">中 (0.6-0.8)</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <div class=\"text-sm font-medium\">{{ distributionData.medium }}</div>\n            </div>\n          </div>\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center space-x-2\">\n              <div class=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n              <span class=\"text-sm text-gray-600\">低 (<0.6)</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <div class=\"text-sm font-medium\">{{ distributionData.low }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 记忆使用统计 -->\n      <div>\n        <h4 class=\"text-sm font-semibold text-gray-700 mb-3\">记忆使用统计</h4>\n        <div class=\"grid grid-cols-3 gap-3 text-center\">\n          <div class=\"bg-blue-50 rounded-lg p-3\">\n            <div class=\"text-lg font-bold text-blue-600\">{{ memoryStats.retrieved }}</div>\n            <div class=\"text-xs text-gray-600\">检索记忆</div>\n          </div>\n          <div class=\"bg-green-50 rounded-lg p-3\">\n            <div class=\"text-lg font-bold text-green-600\">{{ memoryStats.associated }}</div>\n            <div class=\"text-xs text-gray-600\">关联记忆</div>\n          </div>\n          <div class=\"bg-purple-50 rounded-lg p-3\">\n            <div class=\"text-lg font-bold text-purple-600\">{{ memoryStats.contextual }}</div>\n            <div class=\"text-xs text-gray-600\">上下文记忆</div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 检索效率 -->\n      <div>\n        <div class=\"flex items-center justify-between mb-3\">\n          <h4 class=\"text-sm font-semibold text-gray-700\">检索效率</h4>\n          <span class=\"text-xs text-gray-500\">{{ memoryStats.retrieved }} 次检索</span>\n        </div>\n        <div class=\"space-y-2\">\n          <div class=\"flex items-center justify-between text-sm\">\n            <span class=\"text-gray-600\">平均检索时间</span>\n            <span class=\"font-medium text-green-600\">< 50ms</span>\n          </div>\n          <div class=\"flex items-center justify-between text-sm\">\n            <span class=\"text-gray-600\">缓存命中率</span>\n            <span class=\"font-medium text-blue-600\">100%</span>\n          </div>\n          <div class=\"flex items-center justify-between text-sm\">\n            <span class=\"text-gray-600\">向量化加速</span>\n            <span class=\"font-medium text-purple-600\">588x</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 记忆质量评估 -->\n      <div>\n        <div class=\"flex items-center justify-between mb-3\">\n          <h4 class=\"text-sm font-semibold text-gray-700\">记忆质量</h4>\n          <span class=\"text-xs px-2 py-1 bg-green-100 text-green-700 rounded-full\">\n            {{ qualityRating }}\n          </span>\n        </div>\n        <p class=\"text-xs text-gray-600 leading-relaxed\">\n          基于相似度分布、检索效率和关联质量的综合评估。\n          当前系统记忆质量良好，\n          记忆检索效果良好，建议继续优化\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { CpuChipIcon } from '@heroicons/vue/24/outline'\n\n// 使用Heroicons的CpuChipIcon作为BrainIcon\nconst BrainIcon = CpuChipIcon\n\nconst isRefreshing = ref(false)\n\n// 模拟数据\nconst averageSimilarity = ref(75.0)\n\nconst distributionData = ref({\n  high: 15,\n  medium: 20,\n  low: 10\n})\n\nconst memoryStats = ref({\n  retrieved: 45,\n  associated: 23,\n  contextual: 12\n})\n\nconst qualityRating = computed(() => {\n  const avg = averageSimilarity.value\n  if (avg >= 80) return '优秀'\n  if (avg >= 70) return '良好'\n  if (avg >= 60) return '一般'\n  return '需要优化'\n})\n\nconst refreshAnalysis = async () => {\n  if (isRefreshing.value) return\n  \n  try {\n    isRefreshing.value = true\n    \n    // 模拟数据刷新\n    await new Promise(resolve => setTimeout(resolve, 1500))\n    \n    // 生成新的模拟数据\n    averageSimilarity.value = 70 + Math.random() * 20\n    \n    distributionData.value = {\n      high: Math.floor(10 + Math.random() * 20),\n      medium: Math.floor(15 + Math.random() * 25),\n      low: Math.floor(5 + Math.random() * 15)\n    }\n    \n    memoryStats.value = {\n      retrieved: Math.floor(30 + Math.random() * 30),\n      associated: Math.floor(15 + Math.random() * 20),\n      contextual: Math.floor(8 + Math.random() * 15)\n    }\n    \n  } finally {\n    isRefreshing.value = false\n  }\n}\n\nonMounted(() => {\n  // 组件挂载时的初始化逻辑\n})\n</script>\n\n<style scoped>\n/* 组件特定样式 */\n</style>","<template>\r\n  <div \r\n    class=\"card cursor-pointer transition-all duration-300 hover:shadow-xl hover:scale-105\"\r\n    :class=\"{ 'opacity-50 cursor-not-allowed': !available }\"\r\n    @click=\"handleClick\"\r\n  >\r\n    <div class=\"flex items-start space-x-4\">\r\n      <!-- 图标 -->\r\n      <div :class=\"[\r\n        'p-3 rounded-lg',\r\n        available ? 'bg-primary-100' : 'bg-gray-100'\r\n      ]\">\r\n        <component \r\n          :is=\"iconComponent\" \r\n          :class=\"[\r\n            'w-6 h-6',\r\n            available ? 'text-primary-600' : 'text-gray-400'\r\n          ]\"\r\n        />\r\n      </div>\r\n      \r\n      <!-- 内容 -->\r\n      <div class=\"flex-1\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <h3 :class=\"[\r\n            'font-semibold',\r\n            available ? 'text-gray-900' : 'text-gray-500'\r\n          ]\">\r\n            {{ title }}\r\n          </h3>\r\n          \r\n          <!-- 状态指示器 -->\r\n          <span \r\n            v-if=\"available\"\r\n            class=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full\"\r\n          >\r\n            可用\r\n          </span>\r\n          <span \r\n            v-else\r\n            class=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-gray-100 text-gray-500 rounded-full\"\r\n          >\r\n            开发中\r\n          </span>\r\n        </div>\r\n        \r\n        <p :class=\"[\r\n          'text-sm leading-relaxed',\r\n          available ? 'text-gray-600' : 'text-gray-400'\r\n        ]\">\r\n          {{ description }}\r\n        </p>\r\n        \r\n        <!-- 功能特性 -->\r\n        <div v-if=\"features && features.length > 0\" class=\"mt-3\">\r\n          <div class=\"flex flex-wrap gap-1\">\r\n            <span \r\n              v-for=\"feature in features\"\r\n              :key=\"feature\"\r\n              :class=\"[\r\n                'inline-flex items-center px-2 py-1 text-xs rounded-full',\r\n                available \r\n                  ? 'bg-blue-50 text-blue-700' \r\n                  : 'bg-gray-50 text-gray-400'\r\n              ]\"\r\n            >\r\n              {{ feature }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 操作按钮 -->\r\n        <div class=\"mt-4 flex items-center justify-between\">\r\n          <div class=\"flex items-center space-x-2 text-xs text-gray-500\">\r\n            <ClockIcon class=\"w-4 h-4\" />\r\n            <span>预计开发时间: {{ estimatedTime || '待定' }}</span>\r\n          </div>\r\n          \r\n          <ChevronRightIcon \r\n            :class=\"[\r\n              'w-5 h-5 transition-transform',\r\n              available ? 'text-primary-500' : 'text-gray-300'\r\n            ]\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useAppStore } from '@/stores/app'\r\nimport {\r\n  EyeIcon,\r\n  ChartBarIcon,\r\n  CpuChipIcon,\r\n  ClockIcon,\r\n  ChevronRightIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\ninterface Props {\r\n  title: string\r\n  description: string\r\n  icon: 'eye' | 'chart' | 'flow' | 'settings'\r\n  route?: string\r\n  available?: boolean\r\n  features?: string[]\r\n  estimatedTime?: string\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  available: false,\r\n  features: () => [],\r\n  estimatedTime: '待定'\r\n})\r\n\r\nconst router = useRouter()\r\nconst appStore = useAppStore()\r\n\r\n// 图标映射\r\nconst iconComponent = computed(() => {\r\n  switch (props.icon) {\r\n    case 'eye':\r\n      return EyeIcon\r\n    case 'chart':\r\n      return ChartBarIcon\r\n    case 'flow':\r\n      return CpuChipIcon\r\n    default:\r\n      return ChartBarIcon\r\n  }\r\n})\r\n\r\nconst handleClick = () => {\r\n  if (!props.available) {\r\n    appStore.addNotification({\r\n      type: 'info',\r\n      title: '功能开发中',\r\n      message: `${props.title} 功能正在开发中，敬请期待！`,\r\n      duration: 3000\r\n    })\r\n    return\r\n  }\r\n  \r\n  if (props.route) {\r\n    router.push(props.route)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.card:hover .ChevronRightIcon {\r\n  transform: translateX(4px);\r\n}\r\n</style>","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <HeartIcon class=\"w-5 h-5 mr-2\" :class=\"healthIconColor\" />\r\n        系统健康状态\r\n      </h3>\r\n      <div class=\"text-xs text-gray-500\">\r\n        {{ lastUpdateDisplay }}\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"space-y-4\">\r\n      <!-- 健康评分 -->\r\n      <div class=\"text-center\">\r\n        <div class=\"flex items-center justify-center mb-2\">\r\n          <span class=\"text-3xl mr-2\">{{ healthData?.status_emoji || '❓' }}</span>\r\n          <div>\r\n            <div class=\"text-2xl font-bold\" :class=\"healthScoreColor\">\r\n              {{ healthScore }}\r\n            </div>\r\n            <div class=\"text-sm text-gray-600\">健康评分</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 健康状态条 -->\r\n        <div class=\"w-full bg-gray-200 rounded-full h-3 mt-3\">\r\n          <div \r\n            class=\"h-3 rounded-full transition-all duration-1000\"\r\n            :class=\"healthBarColor\"\r\n            :style=\"{ width: `${healthScore}%` }\"\r\n          ></div>\r\n        </div>\r\n        \r\n        <div class=\"text-sm mt-2\" :class=\"healthStatusColor\">\r\n          {{ healthData?.status || '未知' }}\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 系统指标概览 -->\r\n      <div class=\"grid grid-cols-2 gap-3\">\r\n        <div class=\"metric-mini\">\r\n          <div class=\"text-xs text-gray-600 mb-1\">CPU使用率</div>\r\n          <div class=\"flex items-center\">\r\n            <div class=\"text-lg font-semibold mr-2\" :class=\"cpuColor\">\r\n              {{ cpuUsage }}%\r\n            </div>\r\n            <div class=\"w-8 h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n              <div \r\n                class=\"h-full transition-all duration-500\"\r\n                :class=\"cpuBarColor\"\r\n                :style=\"{ width: `${Math.min(cpuUsage, 100)}%` }\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"metric-mini\">\r\n          <div class=\"text-xs text-gray-600 mb-1\">内存使用率</div>\r\n          <div class=\"flex items-center\">\r\n            <div class=\"text-lg font-semibold mr-2\" :class=\"memoryColor\">\r\n              {{ memoryUsage }}%\r\n            </div>\r\n            <div class=\"w-8 h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n              <div \r\n                class=\"h-full transition-all duration-500\"\r\n                :class=\"memoryBarColor\"\r\n                :style=\"{ width: `${Math.min(memoryUsage, 100)}%` }\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"metric-mini\">\r\n          <div class=\"text-xs text-gray-600 mb-1\">缓存命中率</div>\r\n          <div class=\"flex items-center\">\r\n            <div class=\"text-lg font-semibold mr-2\" :class=\"cacheColor\">\r\n              {{ cacheHitRate }}%\r\n            </div>\r\n            <CheckCircleIcon v-if=\"cacheHitRate >= 80\" class=\"w-4 h-4 text-green-500\" />\r\n            <ExclamationTriangleIcon v-else class=\"w-4 h-4 text-yellow-500\" />\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"metric-mini\">\r\n          <div class=\"text-xs text-gray-600 mb-1\">错误率</div>\r\n          <div class=\"flex items-center\">\r\n            <div class=\"text-lg font-semibold mr-2\" :class=\"errorRateColor\">\r\n              {{ errorRateDisplay }}%\r\n            </div>\r\n            <XCircleIcon v-if=\"errorRate > 0.05\" class=\"w-4 h-4 text-red-500\" />\r\n            <CheckCircleIcon v-else class=\"w-4 h-4 text-green-500\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 问题列表 -->\r\n      <div v-if=\"healthData?.issues && healthData.issues.length > 0\" class=\"mt-4\">\r\n        <div class=\"text-sm font-medium text-gray-700 mb-2\">⚠️ 需要关注的问题:</div>\r\n        <div class=\"space-y-1\">\r\n          <div \r\n            v-for=\"(issue, index) in healthData.issues.slice(0, 3)\" \r\n            :key=\"index\"\r\n            class=\"text-xs text-red-600 bg-red-50 px-2 py-1 rounded\"\r\n          >\r\n            {{ issue }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 告警摘要 -->\r\n      <div v-if=\"alertsData\" class=\"border-t pt-3\">\r\n        <div class=\"flex items-center justify-between\">\r\n          <span class=\"text-sm text-gray-600\">活跃告警</span>\r\n          <div class=\"flex space-x-2\">\r\n            <span \r\n              v-if=\"alertsData.critical_alerts > 0\" \r\n              class=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-red-100 text-red-800\"\r\n            >\r\n              🔴 {{ alertsData.critical_alerts }}\r\n            </span>\r\n            <span \r\n              v-if=\"alertsData.warning_alerts > 0\" \r\n              class=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-yellow-100 text-yellow-800\"\r\n            >\r\n              ⚠️ {{ alertsData.warning_alerts }}\r\n            </span>\r\n            <span \r\n              v-if=\"alertsData.critical_alerts === 0 && alertsData.warning_alerts === 0\"\r\n              class=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-green-100 text-green-800\"\r\n            >\r\n              ✅ 无告警\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 刷新按钮 -->\r\n    <div class=\"mt-4 pt-4 border-t border-gray-200\">\r\n      <button \r\n        @click=\"refreshHealth\"\r\n        :disabled=\"isRefreshing\"\r\n        class=\"w-full text-sm text-primary-600 hover:text-primary-700 disabled:opacity-50 py-2 px-4 border border-primary-200 rounded-lg hover:bg-primary-50 transition-colors\"\r\n      >\r\n        {{ isRefreshing ? '刷新中...' : '🔄 刷新健康状态' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { useAppStore } from '@/stores/app'\r\nimport { formatRelativeTime } from '@/utils/formatters'\r\nimport { apiService } from '@/services/api'\r\nimport {\r\n  HeartIcon,\r\n  CheckCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  XCircleIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\nconst monitoringStore = useMonitoringStore()\r\nconst appStore = useAppStore()\r\n\r\nconst isRefreshing = ref(false)\r\nconst healthData = ref<any>(null)\r\nconst metricsData = ref<any>(null)\r\nconst alertsData = ref<any>(null)\r\nconst lastUpdateTime = ref<Date | null>(null)\r\nconst refreshInterval = ref<NodeJS.Timeout | null>(null)\r\n\r\n// 计算属性\r\nconst healthScore = computed(() => {\r\n  return healthData.value?.health_score || 0\r\n})\r\n\r\nconst cpuUsage = computed(() => {\r\n  return Math.round(metricsData.value?.cpu_usage || 0)\r\n})\r\n\r\nconst memoryUsage = computed(() => {\r\n  return Math.round(metricsData.value?.memory_usage_percent || 0)\r\n})\r\n\r\nconst cacheHitRate = computed(() => {\r\n  return Math.round((metricsData.value?.cache_hit_rate || 0) * 100)\r\n})\r\n\r\nconst errorRate = computed(() => {\r\n  return metricsData.value?.error_rate || 0\r\n})\r\n\r\nconst errorRateDisplay = computed(() => {\r\n  return (errorRate.value * 100).toFixed(2)\r\n})\r\n\r\nconst lastUpdateDisplay = computed(() => {\r\n  if (!lastUpdateTime.value) return '从未更新'\r\n  return formatRelativeTime(lastUpdateTime.value)\r\n})\r\n\r\n// 样式计算\r\nconst healthIconColor = computed(() => {\r\n  if (healthScore.value >= 90) return 'text-green-500'\r\n  if (healthScore.value >= 70) return 'text-yellow-500'\r\n  return 'text-red-500'\r\n})\r\n\r\nconst healthScoreColor = computed(() => {\r\n  if (healthScore.value >= 90) return 'text-green-600'\r\n  if (healthScore.value >= 70) return 'text-yellow-600'\r\n  return 'text-red-600'\r\n})\r\n\r\nconst healthBarColor = computed(() => {\r\n  if (healthScore.value >= 90) return 'bg-gradient-to-r from-green-400 to-green-500'\r\n  if (healthScore.value >= 70) return 'bg-gradient-to-r from-yellow-400 to-yellow-500'\r\n  return 'bg-gradient-to-r from-red-400 to-red-500'\r\n})\r\n\r\nconst healthStatusColor = computed(() => {\r\n  if (healthScore.value >= 90) return 'text-green-700'\r\n  if (healthScore.value >= 70) return 'text-yellow-700'\r\n  return 'text-red-700'\r\n})\r\n\r\nconst cpuColor = computed(() => {\r\n  if (cpuUsage.value >= 90) return 'text-red-600'\r\n  if (cpuUsage.value >= 80) return 'text-yellow-600'\r\n  return 'text-green-600'\r\n})\r\n\r\nconst cpuBarColor = computed(() => {\r\n  if (cpuUsage.value >= 90) return 'bg-red-400'\r\n  if (cpuUsage.value >= 80) return 'bg-yellow-400'\r\n  return 'bg-green-400'\r\n})\r\n\r\nconst memoryColor = computed(() => {\r\n  if (memoryUsage.value >= 95) return 'text-red-600'\r\n  if (memoryUsage.value >= 85) return 'text-yellow-600'\r\n  return 'text-green-600'\r\n})\r\n\r\nconst memoryBarColor = computed(() => {\r\n  if (memoryUsage.value >= 95) return 'bg-red-400'\r\n  if (memoryUsage.value >= 85) return 'bg-yellow-400'\r\n  return 'bg-green-400'\r\n})\r\n\r\nconst cacheColor = computed(() => {\r\n  if (cacheHitRate.value >= 80) return 'text-green-600'\r\n  if (cacheHitRate.value >= 60) return 'text-yellow-600'\r\n  return 'text-red-600'\r\n})\r\n\r\nconst errorRateColor = computed(() => {\r\n  if (errorRate.value > 0.05) return 'text-red-600'\r\n  if (errorRate.value > 0.01) return 'text-yellow-600'\r\n  return 'text-green-600'\r\n})\r\n\r\n// 方法\r\nconst refreshHealth = async () => {\r\n  if (isRefreshing.value) return\r\n  \r\n  try {\r\n    isRefreshing.value = true\r\n    \r\n    // 并行获取健康状态、指标和告警数据\r\n    const [healthResponse, metricsResponse, alertsResponse] = await Promise.allSettled([\r\n      apiService.getEnhancedSystemHealth(),\r\n      apiService.getCurrentMetrics(),\r\n      apiService.getActiveAlerts()\r\n    ])\r\n    \r\n    // 处理健康状态数据\r\n    if (healthResponse.status === 'fulfilled' && healthResponse.value.success) {\r\n      healthData.value = healthResponse.value.data\r\n    }\r\n    \r\n    // 处理指标数据\r\n    if (metricsResponse.status === 'fulfilled' && metricsResponse.value.success) {\r\n      metricsData.value = metricsResponse.value.data\r\n    }\r\n    \r\n    // 处理告警数据\r\n    if (alertsResponse.status === 'fulfilled' && alertsResponse.value.success) {\r\n      const alertStats = alertsResponse.value.data.statistics\r\n      alertsData.value = {\r\n        critical_alerts: alertStats?.severity_distribution?.critical || 0,\r\n        warning_alerts: alertStats?.severity_distribution?.warning || 0,\r\n        total_alerts: alertStats?.active_alerts || 0\r\n      }\r\n    }\r\n    \r\n    lastUpdateTime.value = new Date()\r\n    \r\n    // 显示成功通知\r\n    appStore.addNotification({\r\n      type: 'success',\r\n      title: '健康状态已更新',\r\n      message: `系统健康评分: ${healthScore.value}`,\r\n      duration: 2000\r\n    })\r\n    \r\n  } catch (error) {\r\n    console.error('刷新健康状态失败:', error)\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '刷新失败',\r\n      message: '无法获取系统健康状态',\r\n      duration: 3000\r\n    })\r\n  } finally {\r\n    isRefreshing.value = false\r\n  }\r\n}\r\n\r\nconst startAutoRefresh = () => {\r\n  refreshInterval.value = setInterval(refreshHealth, 30000) // 每30秒刷新\r\n}\r\n\r\nconst stopAutoRefresh = () => {\r\n  if (refreshInterval.value) {\r\n    clearInterval(refreshInterval.value)\r\n    refreshInterval.value = null\r\n  }\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  refreshHealth()\r\n  startAutoRefresh()\r\n})\r\n\r\nonUnmounted(() => {\r\n  stopAutoRefresh()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.metric-mini {\r\n  @apply bg-gray-50 p-3 rounded-lg;\r\n}\r\n\r\n.metric-mini:hover {\r\n  @apply bg-gray-100 transform scale-105 transition-all duration-200;\r\n}\r\n\r\n/* 健康状态动画 */\r\n.health-pulse {\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0%, 100% {\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    opacity: 0.8;\r\n  }\r\n}\r\n\r\n/* 进度条动画 */\r\n.progress-bar {\r\n  transition: width 0.8s ease-in-out;\r\n}\r\n\r\n/* 悬停效果 */\r\n.card:hover {\r\n  @apply shadow-lg transform -translate-y-1 transition-all duration-300;\r\n}\r\n</style>","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title flex items-center\">\r\n        <BellIcon class=\"w-5 h-5 mr-2\" :class=\"alertIconColor\" />\r\n        系统告警\r\n        <span v-if=\"totalAlerts > 0\" class=\"ml-2 inline-flex items-center px-2 py-1 rounded-full text-xs bg-red-100 text-red-800\">\r\n          {{ totalAlerts }}\r\n        </span>\r\n      </h3>\r\n      <div class=\"text-xs text-gray-500\">\r\n        {{ lastUpdateDisplay }}\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"space-y-4\">\r\n      <!-- 告警统计概览 -->\r\n      <div class=\"grid grid-cols-3 gap-3\">\r\n        <div class=\"alert-stat\">\r\n          <div class=\"text-center\">\r\n            <div class=\"text-2xl font-bold text-red-600\">{{ criticalCount }}</div>\r\n            <div class=\"text-xs text-gray-600\">严重告警</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"alert-stat\">\r\n          <div class=\"text-center\">\r\n            <div class=\"text-2xl font-bold text-yellow-600\">{{ warningCount }}</div>\r\n            <div class=\"text-xs text-gray-600\">警告告警</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"alert-stat\">\r\n          <div class=\"text-center\">\r\n            <div class=\"text-2xl font-bold text-blue-600\">{{ infoCount }}</div>\r\n            <div class=\"text-xs text-gray-600\">信息告警</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 活跃告警列表 -->\r\n      <div v-if=\"activeAlerts.length > 0\" class=\"space-y-2\">\r\n        <div class=\"text-sm font-medium text-gray-700 mb-2\">🚨 活跃告警:</div>\r\n        \r\n        <div \r\n          v-for=\"alert in displayedAlerts\" \r\n          :key=\"alert.alert_id\"\r\n          class=\"alert-item\"\r\n          :class=\"getAlertClass(alert.severity)\"\r\n        >\r\n          <div class=\"flex items-start justify-between\">\r\n            <div class=\"flex-1\">\r\n              <div class=\"flex items-center mb-1\">\r\n                <component \r\n                  :is=\"getAlertIcon(alert.severity)\" \r\n                  :class=\"['w-4 h-4 mr-2', getAlertIconColor(alert.severity)]\"\r\n                />\r\n                <span class=\"text-sm font-medium\">{{ alert.rule_name }}</span>\r\n                <span class=\"ml-2 text-xs px-2 py-1 rounded-full\" :class=\"getSeverityBadgeClass(alert.severity)\">\r\n                  {{ getSeverityText(alert.severity) }}\r\n                </span>\r\n              </div>\r\n              \r\n              <div class=\"text-xs text-gray-600 mb-1\">\r\n                {{ alert.message }}\r\n              </div>\r\n              \r\n              <div class=\"flex items-center space-x-4 text-xs text-gray-500\">\r\n                <span>触发时间: {{ formatAlertTime(alert.triggered_at) }}</span>\r\n                <span v-if=\"alert.trigger_count > 1\">触发次数: {{ alert.trigger_count }}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"flex space-x-1 ml-2\">\r\n              <button \r\n                v-if=\"alert.status === 'active'\"\r\n                @click=\"acknowledgeAlert(alert.alert_id)\"\r\n                :disabled=\"isAcknowledging\"\r\n                class=\"text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 disabled:opacity-50\"\r\n              >\r\n                确认\r\n              </button>\r\n              \r\n              <span \r\n                v-else-if=\"alert.status === 'acknowledged'\"\r\n                class=\"text-xs px-2 py-1 bg-gray-100 text-gray-600 rounded\"\r\n              >\r\n                已确认\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 显示更多按钮 -->\r\n        <div v-if=\"activeAlerts.length > maxDisplayed\" class=\"text-center\">\r\n          <button \r\n            @click=\"toggleShowAll\"\r\n            class=\"text-sm text-primary-600 hover:text-primary-700\"\r\n          >\r\n            {{ showAll ? '收起' : `显示全部 ${activeAlerts.length} 个告警` }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 无告警状态 -->\r\n      <div v-else class=\"text-center py-4\">\r\n        <CheckCircleIcon class=\"w-12 h-12 text-green-400 mx-auto mb-2\" />\r\n        <div class=\"text-sm text-gray-600\">✅ 暂无活跃告警</div>\r\n        <div class=\"text-xs text-gray-500 mt-1\">系统运行正常</div>\r\n      </div>\r\n      \r\n      <!-- 告警规则状态 -->\r\n      <div v-if=\"alertStatistics\" class=\"border-t pt-3\">\r\n        <div class=\"flex items-center justify-between text-sm\">\r\n          <span class=\"text-gray-600\">告警规则状态</span>\r\n          <div class=\"flex space-x-2 text-xs\">\r\n            <span class=\"text-green-600\">\r\n              ✅ {{ alertStatistics.enabled_rules }}/{{ alertStatistics.total_rules }} 已启用\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 最近24小时告警趋势 -->\r\n        <div class=\"mt-2 text-xs text-gray-500\">\r\n          最近24小时: {{ alertStatistics.alerts_24h }} 个告警\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 操作按钮 -->\r\n    <div class=\"mt-4 pt-4 border-t border-gray-200 space-y-2\">\r\n      <div class=\"flex space-x-2\">\r\n        <button \r\n          @click=\"refreshAlerts\"\r\n          :disabled=\"isRefreshing\"\r\n          class=\"flex-1 text-sm text-primary-600 hover:text-primary-700 disabled:opacity-50 py-2 px-4 border border-primary-200 rounded-lg hover:bg-primary-50 transition-colors\"\r\n        >\r\n          {{ isRefreshing ? '刷新中...' : '🔄 刷新告警' }}\r\n        </button>\r\n        \r\n        <button \r\n          v-if=\"criticalCount > 0 || warningCount > 0\"\r\n          @click=\"acknowledgeAllAlerts\"\r\n          :disabled=\"isAcknowledging\"\r\n          class=\"flex-1 text-sm text-orange-600 hover:text-orange-700 disabled:opacity-50 py-2 px-4 border border-orange-200 rounded-lg hover:bg-orange-50 transition-colors\"\r\n        >\r\n          {{ isAcknowledging ? '处理中...' : '🔔 确认全部' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { useAppStore } from '@/stores/app'\r\nimport { formatRelativeTime } from '@/utils/formatters'\r\nimport { apiService } from '@/services/api'\r\nimport {\r\n  BellIcon,\r\n  CheckCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  XCircleIcon,\r\n  InformationCircleIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\nconst appStore = useAppStore()\r\n\r\nconst isRefreshing = ref(false)\r\nconst isAcknowledging = ref(false)\r\nconst activeAlerts = ref<any[]>([])\r\nconst alertStatistics = ref<any>(null)\r\nconst lastUpdateTime = ref<Date | null>(null)\r\nconst refreshInterval = ref<NodeJS.Timeout | null>(null)\r\nconst showAll = ref(false)\r\nconst maxDisplayed = 3\r\n\r\n// 计算属性\r\nconst totalAlerts = computed(() => activeAlerts.value.length)\r\n\r\nconst criticalCount = computed(() => \r\n  activeAlerts.value.filter(alert => alert.severity === 'critical').length\r\n)\r\n\r\nconst warningCount = computed(() => \r\n  activeAlerts.value.filter(alert => alert.severity === 'warning').length\r\n)\r\n\r\nconst infoCount = computed(() => \r\n  activeAlerts.value.filter(alert => alert.severity === 'info').length\r\n)\r\n\r\nconst displayedAlerts = computed(() => {\r\n  if (showAll.value || activeAlerts.value.length <= maxDisplayed) {\r\n    return activeAlerts.value\r\n  }\r\n  return activeAlerts.value.slice(0, maxDisplayed)\r\n})\r\n\r\nconst alertIconColor = computed(() => {\r\n  if (criticalCount.value > 0) return 'text-red-500'\r\n  if (warningCount.value > 0) return 'text-yellow-500'\r\n  return 'text-green-500'\r\n})\r\n\r\nconst lastUpdateDisplay = computed(() => {\r\n  if (!lastUpdateTime.value) return '从未更新'\r\n  return formatRelativeTime(lastUpdateTime.value)\r\n})\r\n\r\n// 工具方法\r\nconst getAlertIcon = (severity: string) => {\r\n  switch (severity) {\r\n    case 'critical': return XCircleIcon\r\n    case 'warning': return ExclamationTriangleIcon\r\n    case 'info': return InformationCircleIcon\r\n    default: return BellIcon\r\n  }\r\n}\r\n\r\nconst getAlertIconColor = (severity: string) => {\r\n  switch (severity) {\r\n    case 'critical': return 'text-red-500'\r\n    case 'warning': return 'text-yellow-500'\r\n    case 'info': return 'text-blue-500'\r\n    default: return 'text-gray-500'\r\n  }\r\n}\r\n\r\nconst getAlertClass = (severity: string) => {\r\n  switch (severity) {\r\n    case 'critical': return 'border-l-4 border-red-400 bg-red-50'\r\n    case 'warning': return 'border-l-4 border-yellow-400 bg-yellow-50'\r\n    case 'info': return 'border-l-4 border-blue-400 bg-blue-50'\r\n    default: return 'border-l-4 border-gray-400 bg-gray-50'\r\n  }\r\n}\r\n\r\nconst getSeverityBadgeClass = (severity: string) => {\r\n  switch (severity) {\r\n    case 'critical': return 'bg-red-100 text-red-800'\r\n    case 'warning': return 'bg-yellow-100 text-yellow-800'\r\n    case 'info': return 'bg-blue-100 text-blue-800'\r\n    default: return 'bg-gray-100 text-gray-800'\r\n  }\r\n}\r\n\r\nconst getSeverityText = (severity: string) => {\r\n  switch (severity) {\r\n    case 'critical': return '严重'\r\n    case 'warning': return '警告'\r\n    case 'info': return '信息'\r\n    default: return '未知'\r\n  }\r\n}\r\n\r\nconst formatAlertTime = (timestamp: number) => {\r\n  return new Date(timestamp * 1000).toLocaleString()\r\n}\r\n\r\n// 方法\r\nconst refreshAlerts = async () => {\r\n  if (isRefreshing.value) return\r\n  \r\n  try {\r\n    isRefreshing.value = true\r\n    \r\n    const response = await apiService.getActiveAlerts()\r\n    \r\n    if (response.success) {\r\n      activeAlerts.value = response.data.active_alerts || []\r\n      alertStatistics.value = response.data.statistics || null\r\n      lastUpdateTime.value = new Date()\r\n      \r\n      // 按严重程度排序\r\n      activeAlerts.value.sort((a, b) => {\r\n        const severityOrder = { 'critical': 3, 'warning': 2, 'info': 1 }\r\n        return (severityOrder[b.severity] || 0) - (severityOrder[a.severity] || 0)\r\n      })\r\n      \r\n    } else {\r\n      throw new Error(response.error || '获取告警数据失败')\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('刷新告警失败:', error)\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '刷新失败',\r\n      message: '无法获取告警信息',\r\n      duration: 3000\r\n    })\r\n  } finally {\r\n    isRefreshing.value = false\r\n  }\r\n}\r\n\r\nconst acknowledgeAlert = async (alertId: string) => {\r\n  if (isAcknowledging.value) return\r\n  \r\n  try {\r\n    isAcknowledging.value = true\r\n    \r\n    const response = await apiService.acknowledgeAlert(alertId, 'web_user')\r\n    \r\n    if (response.success) {\r\n      // 更新本地状态\r\n      const alert = activeAlerts.value.find(a => a.alert_id === alertId)\r\n      if (alert) {\r\n        alert.status = 'acknowledged'\r\n        alert.acknowledged_at = Date.now() / 1000\r\n        alert.acknowledged_by = 'web_user'\r\n      }\r\n      \r\n      appStore.addNotification({\r\n        type: 'success',\r\n        title: '告警已确认',\r\n        message: '告警状态已更新',\r\n        duration: 2000\r\n      })\r\n      \r\n    } else {\r\n      throw new Error(response.error || '确认告警失败')\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('确认告警失败:', error)\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '确认失败',\r\n      message: '无法确认告警',\r\n      duration: 3000\r\n    })\r\n  } finally {\r\n    isAcknowledging.value = false\r\n  }\r\n}\r\n\r\nconst acknowledgeAllAlerts = async () => {\r\n  if (isAcknowledging.value) return\r\n  \r\n  const activeUnacknowledgedAlerts = activeAlerts.value.filter(\r\n    alert => alert.status === 'active'\r\n  )\r\n  \r\n  if (activeUnacknowledgedAlerts.length === 0) {\r\n    appStore.addNotification({\r\n      type: 'info',\r\n      title: '无需确认',\r\n      message: '没有未确认的告警',\r\n      duration: 2000\r\n    })\r\n    return\r\n  }\r\n  \r\n  try {\r\n    isAcknowledging.value = true\r\n    \r\n    // 并行确认所有告警\r\n    const promises = activeUnacknowledgedAlerts.map(alert =>\r\n      apiService.acknowledgeAlert(alert.alert_id, 'web_user')\r\n    )\r\n    \r\n    const results = await Promise.allSettled(promises)\r\n    \r\n    let successCount = 0\r\n    let failCount = 0\r\n    \r\n    results.forEach((result, index) => {\r\n      const alert = activeUnacknowledgedAlerts[index]\r\n      \r\n      if (result.status === 'fulfilled' && result.value.success) {\r\n        alert.status = 'acknowledged'\r\n        alert.acknowledged_at = Date.now() / 1000\r\n        alert.acknowledged_by = 'web_user'\r\n        successCount++\r\n      } else {\r\n        failCount++\r\n      }\r\n    })\r\n    \r\n    if (successCount > 0) {\r\n      appStore.addNotification({\r\n        type: 'success',\r\n        title: '批量确认完成',\r\n        message: `成功确认 ${successCount} 个告警${failCount > 0 ? `，${failCount} 个失败` : ''}`,\r\n        duration: 3000\r\n      })\r\n    }\r\n    \r\n    if (failCount > 0 && successCount === 0) {\r\n      appStore.addNotification({\r\n        type: 'error',\r\n        title: '批量确认失败',\r\n        message: '无法确认告警，请重试',\r\n        duration: 3000\r\n      })\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('批量确认告警失败:', error)\r\n    appStore.addNotification({\r\n      type: 'error',\r\n      title: '批量确认失败',\r\n      message: '操作执行失败，请重试',\r\n      duration: 3000\r\n    })\r\n  } finally {\r\n    isAcknowledging.value = false\r\n  }\r\n}\r\n\r\nconst toggleShowAll = () => {\r\n  showAll.value = !showAll.value\r\n}\r\n\r\nconst startAutoRefresh = () => {\r\n  refreshInterval.value = setInterval(refreshAlerts, 30000) // 每30秒刷新\r\n}\r\n\r\nconst stopAutoRefresh = () => {\r\n  if (refreshInterval.value) {\r\n    clearInterval(refreshInterval.value)\r\n    refreshInterval.value = null\r\n  }\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  refreshAlerts()\r\n  startAutoRefresh()\r\n})\r\n\r\nonUnmounted(() => {\r\n  stopAutoRefresh()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.alert-stat {\r\n  @apply bg-gray-50 p-3 rounded-lg;\r\n}\r\n\r\n.alert-stat:hover {\r\n  @apply bg-gray-100 transform scale-105 transition-all duration-200;\r\n}\r\n\r\n.alert-item {\r\n  @apply p-3 rounded-lg transition-all duration-200;\r\n}\r\n\r\n.alert-item:hover {\r\n  @apply shadow-sm transform translate-x-1;\r\n}\r\n\r\n/* 告警闪烁动画（仅严重告警） */\r\n.alert-item.border-red-400 {\r\n  animation: criticalPulse 2s infinite;\r\n}\r\n\r\n@keyframes criticalPulse {\r\n  0%, 100% {\r\n    background-color: #fef2f2;\r\n  }\r\n  50% {\r\n    background-color: #fee2e2;\r\n  }\r\n}\r\n\r\n/* 卡片悬停效果 */\r\n.card:hover {\r\n  @apply shadow-lg transform -translate-y-1 transition-all duration-300;\r\n}\r\n</style>","<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n    <!-- 头部 -->\r\n    <DashboardHeader />\r\n    \r\n    <!-- 主要内容区域 -->\r\n    <main class=\"container mx-auto px-4 py-6\">\r\n      <!-- 系统状态概览 -->\r\n      <section class=\"mb-8\">\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <SystemStatusCard />\r\n          <PerformanceMetricsCard />\r\n          <ConnectionStatusCard />\r\n          <QuickActionsCard />\r\n        </div>\r\n      </section>\r\n      \r\n      <!-- 增强监控面板 -->\r\n      <section class=\"mb-8\">\r\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          <SystemHealthCard />\r\n          <AlertsManagementCard />\r\n        </div>\r\n      </section>\r\n      \r\n      <!-- 核心监控面板 -->\r\n      <section class=\"mb-8\">\r\n        <div class=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\r\n          <!-- 实时性能图表 -->\r\n          <PerformanceChart />\r\n          \r\n          <!-- 关键词云 -->\r\n          <KeywordCloud />\r\n        </div>\r\n      </section>\r\n      \r\n      <!-- 详细数据展示 -->\r\n      <section class=\"mb-8\">\r\n        <div class=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\r\n          <!-- 会话列表 -->\r\n          <div class=\"xl:col-span-2\">\r\n            <SessionList />\r\n          </div>\r\n          \r\n          <!-- 记忆分析 -->\r\n          <MemoryAnalysis />\r\n        </div>\r\n      </section>\r\n      \r\n      <!-- 新功能入口 -->\r\n      <section>\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <FeatureCard\r\n            title=\"上下文查看器\"\r\n            description=\"查看完整的对话上下文构建过程\"\r\n            icon=\"eye\"\r\n            route=\"/context\"\r\n            :available=\"hasData\"\r\n          />\r\n          \r\n          <FeatureCard\r\n            title=\"异步评估展示\"\r\n            description=\"监控异步评估过程和结果\"\r\n            icon=\"chart\"\r\n            route=\"/evaluation\"\r\n            :available=\"hasData\"\r\n          />\r\n          \r\n          <FeatureCard\r\n            title=\"15步流程可视化\"\r\n            description=\"实时监控记忆处理流程\"\r\n            icon=\"flow\"\r\n            route=\"/pipeline\"\r\n            :available=\"true\"\r\n          />\r\n        </div>\r\n      </section>\r\n    </main>\r\n    \r\n    <!-- 页脚 -->\r\n    <DashboardFooter />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, onUnmounted, computed } from 'vue'\r\nimport { useMonitoringStore } from '@/stores/monitoring'\r\nimport { useWebSocket } from '@/services/websocket'\r\n\r\n// 组件导入\r\nimport DashboardHeader from '@/components/layout/DashboardHeader.vue'\r\nimport DashboardFooter from '@/components/layout/DashboardFooter.vue'\r\nimport SystemStatusCard from '@/components/cards/SystemStatusCard.vue'\r\nimport PerformanceMetricsCard from '@/components/cards/PerformanceMetricsCard.vue'\r\nimport ConnectionStatusCard from '@/components/cards/ConnectionStatusCard.vue'\r\nimport QuickActionsCard from '@/components/cards/QuickActionsCard.vue'\r\nimport PerformanceChart from '@/components/charts/PerformanceChart.vue'\r\nimport KeywordCloud from '@/components/charts/KeywordCloud.vue'\r\nimport SessionList from '@/components/data/SessionList.vue'\r\nimport MemoryAnalysis from '@/components/data/MemoryAnalysis.vue'\r\nimport FeatureCard from '@/components/cards/FeatureCard.vue'\r\nimport SystemHealthCard from '@/components/cards/SystemHealthCard.vue'\r\nimport AlertsManagementCard from '@/components/cards/AlertsManagementCard.vue'\r\n\r\nconst monitoringStore = useMonitoringStore()\r\nconst { connect, disconnect } = useWebSocket()\r\n\r\n// 计算属性\r\nconst hasData = computed(() => monitoringStore.hasData)\r\n\r\n// 初始化数据获取\r\nconst initializeDashboard = async () => {\r\n  try {\r\n    // 获取初始数据\r\n    await monitoringStore.fetchDashboardData()\r\n    \r\n    // 建立WebSocket连接\r\n    await connect()\r\n    \r\n  } catch (error) {\r\n    console.error('仪表板初始化失败:', error)\r\n  }\r\n}\r\n\r\n// 生命周期钩子\r\nonMounted(() => {\r\n  initializeDashboard()\r\n})\r\n\r\nonUnmounted(() => {\r\n  disconnect()\r\n})\r\n</script>"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","formatDuration","seconds","minutes","remainingSeconds","hours","remainingMinutes","days","remainingHours","formatRelativeTime","date","dateObj","formatDistanceToNow","zhCN","appStore","useAppStore","monitoringStore","useMonitoringStore","isConnected","connectionId","useWebSocket","showDebugInfo","ref","isRunningHealthCheck","appVersion","computed","vueVersion","environment","buildTime","wsStatusText","wsStatusColor","apiStatusText","apiStatusColor","dataSource","totalSessions","averageResponseTime","successRate","lastUpdateDisplay","userAgent","ua","_a","_b","_c","screenResolution","memoryUsage","memory","used","total","runHealthCheck","isHealthy","apiService","wsHealthy","report","error","onMounted","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","$event","_hoisted_15","_hoisted_16","_unref","_hoisted_17","_hoisted_18","systemStatus","statusIcon","WifiIcon","PlayIcon","PauseIcon","ExclamationTriangleIcon","statusColor","statusClass","statusText","currentSessionDisplay","sessionId","runningTimeDisplay","_createBlock","_resolveDynamicComponent","_normalizeStyle","isRefreshing","historicalData","enhancedMetrics","qpsDisplay","cacheHitRate","successRateIcon","CheckCircleIcon","XCircleIcon","successRateColor","trendLinePoints","data","maxQPS","d","minQPS","range","point","index","x","y","refreshMetrics","enhancedResponse","newDataPoint","latestData","_createVNode","ChartBarIcon","_hoisted_19","_hoisted_20","_hoisted_21","isReconnecting","connect","isTestingConnection","wsLatency","wsReconnectCount","apiResponseTime","lastHealthCheck","connectionHistory","wsStatusIcon","wsStatusBadgeClass","apiStatusIcon","apiStatusBadgeClass","dataSourceIcon","ServerIcon","ComputerDesktopIcon","CloudIcon","dataSourceColor","dataSourceText","dataSourceBadgeClass","dataSourceDescription","connectionQuality","quality","connectionQualityText","handleReconnect","runConnectionTest","startTime","endTime","wsStart","testResult","updateConnectionHistory","currentStatus","historyTimer","onUnmounted","_hoisted_22","_hoisted_23","_Fragment","_renderList","i","_normalizeClass","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","status","isExporting","refreshData","exportData","resolve","clearData","BoltIcon","ArrowPathIcon","_createTextVNode","DocumentArrowDownIcon","TrashIcon","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","r","g","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","niceNum","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","distanceToDefinedLo","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","getSizeForArea","scale","chartArea","field","getDatasetArea","getDatasetClipArea","clip","Animator","anims","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","LineController","_dataset","reset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","startAngle","endAngle","getNearestCartesianItems","distanceMetric","minDistance","inRange","center","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","horizontal","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","entry","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","length","diff","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","startPixel","endPixel","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","label","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","visible","dataIndex","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","minY","maxY","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","borderWidth","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","startValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","legendItem","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","centerX","centerY","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","legend","ci","usePointStyle","pointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","curr","Filler","chartContainer","chartCanvas","selectedMetric","isLoading","hasData","currentData","formatValue","maxValue","minValue","avgValue","avg","sum","getChartConfig","getMetricLabel","initChart","nextTick","refreshChart","now","watch","selectedKeyword","mockKeywords","keywords","hasKeywords","totalKeywords","displayKeywords","topKeywords","maxFrequency","getKeywordSize","frequency","getKeywordClass","getRelevanceLevel","selectKeyword","keyword","refreshKeywords","HashtagIcon","XMarkIcon","sessions","expandedSessions","refreshSessions","toggleSessionDetails","ChatBubbleLeftRightIcon","session","HeartIcon","ChevronDownIcon","BrainIcon","CpuChipIcon","averageSimilarity","distributionData","memoryStats","qualityRating","refreshAnalysis","_hoisted_28","__props","router","useRouter","iconComponent","EyeIcon","handleClick","available","description","features","feature","ClockIcon","estimatedTime","ChevronRightIcon","healthData","metricsData","alertsData","lastUpdateTime","refreshInterval","healthScore","cpuUsage","errorRate","errorRateDisplay","healthIconColor","healthScoreColor","healthBarColor","healthStatusColor","cpuColor","cpuBarColor","memoryColor","memoryBarColor","cacheColor","errorRateColor","refreshHealth","healthResponse","metricsResponse","alertsResponse","alertStats","startAutoRefresh","stopAutoRefresh","issue","_hoisted_29","_hoisted_30","maxDisplayed","isAcknowledging","activeAlerts","alertStatistics","showAll","totalAlerts","criticalCount","alert","warningCount","infoCount","displayedAlerts","alertIconColor","getAlertIcon","severity","InformationCircleIcon","BellIcon","getAlertIconColor","getAlertClass","getSeverityBadgeClass","getSeverityText","formatAlertTime","refreshAlerts","response","severityOrder","acknowledgeAlert","alertId","acknowledgeAllAlerts","activeUnacknowledgedAlerts","results","successCount","failCount","toggleShowAll","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","disconnect","initializeDashboard","DashboardHeader","SystemStatusCard","PerformanceMetricsCard","ConnectionStatusCard","QuickActionsCard","SystemHealthCard","AlertsManagementCard","PerformanceChart","KeywordCloud","SessionList","MemoryAnalysis","FeatureCard","DashboardFooter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,22,23]}